/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Listos;

import Clases.Conexion;
import Clases.Metodos;
import Clases.SeleccionTabla;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.io.IOException;
import java.net.MalformedURLException;
import javax.swing.JOptionPane;

import java.sql.Connection;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;

import javax.swing.UIManager;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;



/**
 *
 * @author Daniel Eduardo y su intimo amigo Luis
 */
    

public class Admin extends javax.swing.JFrame {
    
    Color Morado_Fuerte = new Color(54,33,89);
    Color blanquito = new Color (204,204,204);
    
    
    Conexion con = new Conexion();
    Connection cn = con.conectar();
    private int fila =0;
    private int filaA =0;
    
    public Admin() {
        initComponents();
        this.setLocationRelativeTo(null);

        UIManager.put("Alta.selectionBackground", Color.MAGENTA);
        UIManager.put("Alta.opaque", true);
        
        Graficas();
        clientesNuevosxMes();
        IngresosTotales_UltimoMes();
        promedio_edad();

        mostrarDatos();
        mostrarDatosAdmin();
        seleccionarMembresias();
        seleccionarSucursales();
        mostrarDatosEmpleados();
        mostrarTodasM();
        mostrarTodasSucursales();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PopUpClientes = new javax.swing.JPopupMenu();
        Alta = new javax.swing.JMenuItem();
        PopUpEmpleados = new javax.swing.JPopupMenu();
        AltaE = new javax.swing.JMenuItem();
        PopUpAsalariados = new javax.swing.JPopupMenu();
        AltaAsa = new javax.swing.JMenuItem();
        PopUpSucursales = new javax.swing.JPopupMenu();
        AltaS = new javax.swing.JMenuItem();
        PanelGeneral = new javax.swing.JPanel();
        sidePanel = new javax.swing.JPanel();
        PLempleados = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        PLinicio = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        PLclientes = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        PLmembresias = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        PLusuario = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        PLsalir = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        PLSucursales = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblTextoMorado = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        pnVentanas = new javax.swing.JTabbedPane();
        Inicio = new javax.swing.JPanel();
        lblAdSucursal = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        lblNombreA1 = new javax.swing.JLabel();
        lblNombreA2 = new javax.swing.JLabel();
        lblNombreA3 = new javax.swing.JLabel();
        lblNombreA5 = new javax.swing.JLabel();
        lblNombreA7 = new javax.swing.JLabel();
        lblPromedio = new javax.swing.JLabel();
        lblCLN = new javax.swing.JLabel();
        lblIngresos = new javax.swing.JLabel();
        lblNombreA4 = new javax.swing.JLabel();
        lblNombreA6 = new javax.swing.JLabel();
        lblNombreA = new javax.swing.JLabel();
        Empleados = new javax.swing.JPanel();
        Empleados_Switch = new javax.swing.JTabbedPane();
        AAdministradores = new javax.swing.JPanel();
        Administradores = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtEdadA = new javax.swing.JTextField();
        txtNombreA = new javax.swing.JTextField();
        txtAPA = new javax.swing.JTextField();
        txtAMA = new javax.swing.JTextField();
        txtCURPA = new javax.swing.JTextField();
        txtTelefonoA = new javax.swing.JTextField();
        txtDireccionA = new javax.swing.JTextField();
        cboHora = new javax.swing.JComboBox<>();
        txtSalarioA = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        cboSucursales1 = new javax.swing.JComboBox<>();
        btnRegistro1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaAdministradores = new javax.swing.JTable();
        txtBuscarA = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        btnEditarA = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        btnEditarA1 = new javax.swing.JLabel();
        Asalariados = new javax.swing.JPanel();
        Administradores1 = new javax.swing.JPanel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        txtEdadE = new javax.swing.JTextField();
        txtNombreE = new javax.swing.JTextField();
        txtAPE = new javax.swing.JTextField();
        txtAME = new javax.swing.JTextField();
        txtCURPE = new javax.swing.JTextField();
        txtTelefonoE = new javax.swing.JTextField();
        txtDireccionE = new javax.swing.JTextField();
        txtSalarioE = new javax.swing.JTextField();
        jLabel48 = new javax.swing.JLabel();
        cboRolE = new javax.swing.JComboBox<>();
        cboTurnoE = new javax.swing.JComboBox<>();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        cboSucursalesE = new javax.swing.JComboBox<>();
        btnRegistroE = new javax.swing.JLabel();
        btnEditarE = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TablaEmpleados = new javax.swing.JTable();
        jLabel41 = new javax.swing.JLabel();
        txtBuscarE = new javax.swing.JTextField();
        btnEnviar_EM = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        txtContraA = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        Clientes = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaClientes = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtAP = new javax.swing.JTextField();
        txtAM = new javax.swing.JTextField();
        txtCurp = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtEdad = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        cboMembresias = new javax.swing.JComboBox<>();
        jLabel34 = new javax.swing.JLabel();
        cboSucursales = new javax.swing.JComboBox<>();
        btnEditar = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnRegistro = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        jLabel55 = new javax.swing.JLabel();
        btnEditar1 = new javax.swing.JLabel();
        Membresias = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        txtNombreM = new javax.swing.JTextField();
        txtPrecioM = new javax.swing.JTextField();
        txtDescripcionM = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        btnRegistroM = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        TablaMembresias = new javax.swing.JTable();
        jLabel49 = new javax.swing.JLabel();
        txtBuscarM = new javax.swing.JTextField();
        btnEliminar = new javax.swing.JLabel();
        btnEditarM = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        Sucursales = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtNombreG = new javax.swing.JTextField();
        txtDireccionG = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        txtBuscarG = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        TablaSucursales = new javax.swing.JTable();
        btnRegistroG = new javax.swing.JLabel();
        btnEditarG = new javax.swing.JLabel();
        btnEliminarG1 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        Graficas = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();

        Alta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/actualizar-flecha.png"))); // NOI18N
        Alta.setText("Cambiar Fecha (Dar de Alta/Baja)");
        Alta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AltaActionPerformed(evt);
            }
        });
        PopUpClientes.add(Alta);

        AltaE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/actualizar-flecha.png"))); // NOI18N
        AltaE.setText("Cambiar Fecha (Dar de Alta/Baja)");
        AltaE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AltaEActionPerformed(evt);
            }
        });
        PopUpEmpleados.add(AltaE);

        AltaAsa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/actualizar-flecha.png"))); // NOI18N
        AltaAsa.setText("Cambiar Fecha (Dar de Alta/Baja)");
        AltaAsa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AltaAsaActionPerformed(evt);
            }
        });
        PopUpAsalariados.add(AltaAsa);

        AltaS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/actualizar-flecha.png"))); // NOI18N
        AltaS.setText("Cambiar Fecha (Dar de Alta/Baja)");
        AltaS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AltaSActionPerformed(evt);
            }
        });
        PopUpSucursales.add(AltaS);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PanelGeneral.setBackground(new java.awt.Color(255, 255, 255));
        PanelGeneral.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sidePanel.setBackground(new java.awt.Color(54, 33, 89));
        sidePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PLempleados.setBackground(new java.awt.Color(64, 43, 100));
        PLempleados.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                PLempleadosMouseMoved(evt);
            }
        });
        PLempleados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PLempleadosMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PLempleadosMouseExited(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pruebahogar/imagenes/empleado.png"))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 204, 204));
        jLabel5.setText("Empleados");
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout PLempleadosLayout = new javax.swing.GroupLayout(PLempleados);
        PLempleados.setLayout(PLempleadosLayout);
        PLempleadosLayout.setHorizontalGroup(
            PLempleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PLempleadosLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PLempleadosLayout.setVerticalGroup(
            PLempleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PLempleadosLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(PLempleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        sidePanel.add(PLempleados, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, 310, 50));

        PLinicio.setBackground(new java.awt.Color(64, 43, 100));
        PLinicio.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                PLinicioMouseMoved(evt);
            }
        });
        PLinicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PLinicioMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PLinicioMouseExited(evt);
            }
        });

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pruebahogar/imagenes/casa-icono-silueta.png"))); // NOI18N

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(204, 204, 204));
        jLabel17.setText("Inicio");
        jLabel17.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout PLinicioLayout = new javax.swing.GroupLayout(PLinicio);
        PLinicio.setLayout(PLinicioLayout);
        PLinicioLayout.setHorizontalGroup(
            PLinicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PLinicioLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel16)
                .addGap(18, 18, 18)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PLinicioLayout.setVerticalGroup(
            PLinicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PLinicioLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(PLinicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel17)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        sidePanel.add(PLinicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 310, 50));

        PLclientes.setBackground(new java.awt.Color(64, 43, 100));
        PLclientes.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                PLclientesMouseMoved(evt);
            }
        });
        PLclientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PLclientesMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PLclientesMouseExited(evt);
            }
        });

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pruebahogar/imagenes/customer-review.png"))); // NOI18N

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(204, 204, 204));
        jLabel19.setText("Clientes");
        jLabel19.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout PLclientesLayout = new javax.swing.GroupLayout(PLclientes);
        PLclientes.setLayout(PLclientesLayout);
        PLclientesLayout.setHorizontalGroup(
            PLclientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PLclientesLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PLclientesLayout.setVerticalGroup(
            PLclientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PLclientesLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(PLclientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel19)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        sidePanel.add(PLclientes, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 310, 50));

        PLmembresias.setBackground(new java.awt.Color(64, 43, 100));
        PLmembresias.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                PLmembresiasMouseMoved(evt);
            }
        });
        PLmembresias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PLmembresiasMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PLmembresiasMouseExited(evt);
            }
        });

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pruebahogar/imagenes/tarjeta-de-membresia.png"))); // NOI18N

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(204, 204, 204));
        jLabel21.setText("Membresias");
        jLabel21.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout PLmembresiasLayout = new javax.swing.GroupLayout(PLmembresias);
        PLmembresias.setLayout(PLmembresiasLayout);
        PLmembresiasLayout.setHorizontalGroup(
            PLmembresiasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PLmembresiasLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PLmembresiasLayout.setVerticalGroup(
            PLmembresiasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PLmembresiasLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(PLmembresiasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel21)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        sidePanel.add(PLmembresias, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 380, 310, 50));

        PLusuario.setBackground(new java.awt.Color(64, 43, 100));
        PLusuario.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                PLusuarioMouseMoved(evt);
            }
        });
        PLusuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PLusuarioMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PLusuarioMouseExited(evt);
            }
        });

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pruebahogar/imagenes/cambiar.png"))); // NOI18N

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(204, 204, 204));
        jLabel23.setText("Cambiar de usuario");
        jLabel23.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout PLusuarioLayout = new javax.swing.GroupLayout(PLusuario);
        PLusuario.setLayout(PLusuarioLayout);
        PLusuarioLayout.setHorizontalGroup(
            PLusuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PLusuarioLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PLusuarioLayout.setVerticalGroup(
            PLusuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PLusuarioLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(PLusuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel23)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        sidePanel.add(PLusuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 630, 340, 50));

        PLsalir.setBackground(new java.awt.Color(64, 43, 100));
        PLsalir.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                PLsalirMouseMoved(evt);
            }
        });
        PLsalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PLsalirMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PLsalirMouseExited(evt);
            }
        });

        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pruebahogar/imagenes/cerrar-sesion.png"))); // NOI18N

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(204, 204, 204));
        jLabel25.setText("Salir");
        jLabel25.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout PLsalirLayout = new javax.swing.GroupLayout(PLsalir);
        PLsalir.setLayout(PLsalirLayout);
        PLsalirLayout.setHorizontalGroup(
            PLsalirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PLsalirLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PLsalirLayout.setVerticalGroup(
            PLsalirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PLsalirLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(PLsalirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel25)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        sidePanel.add(PLsalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 690, 340, 50));

        jLabel26.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Administrador");
        jLabel26.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sidePanel.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 170, -1));

        jLabel28.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("_____________________");
        jLabel28.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sidePanel.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 210, 40));

        PLSucursales.setBackground(new java.awt.Color(64, 43, 100));
        PLSucursales.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                PLSucursalesMouseMoved(evt);
            }
        });
        PLSucursales.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PLSucursalesMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PLSucursalesMouseExited(evt);
            }
        });

        jLabel31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pruebahogar/imagenes/gimnasio (2).png"))); // NOI18N

        jLabel32.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(204, 204, 204));
        jLabel32.setText("Sucursales");
        jLabel32.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout PLSucursalesLayout = new javax.swing.GroupLayout(PLSucursales);
        PLSucursales.setLayout(PLSucursalesLayout);
        PLSucursalesLayout.setHorizontalGroup(
            PLSucursalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PLSucursalesLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PLSucursalesLayout.setVerticalGroup(
            PLSucursalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PLSucursalesLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(PLSucursalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel32)
                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        sidePanel.add(PLSucursales, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 450, 310, 50));

        PanelGeneral.add(sidePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 280, 750));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Hecho con ♥");
        PanelGeneral.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 0, 1520, 40));

        jPanel2.setBackground(new java.awt.Color(122, 72, 221));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTextoMorado.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTextoMorado.setForeground(new java.awt.Color(255, 255, 255));
        lblTextoMorado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTextoMorado.setText("¡Bienvenido de Vuelta!");
        lblTextoMorado.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel2.add(lblTextoMorado, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 1520, -1));

        jLabel58.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel58.setForeground(new java.awt.Color(255, 255, 255));
        jLabel58.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel58.setText("SANDERS GYM");
        jLabel58.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel2.add(jLabel58, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 12, 1520, 40));

        PanelGeneral.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 40, 1520, 100));

        pnVentanas.setBackground(new java.awt.Color(255, 255, 255));

        Inicio.setBackground(new java.awt.Color(255, 255, 255));
        Inicio.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblAdSucursal.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblAdSucursal.setForeground(new java.awt.Color(54, 33, 89));
        lblAdSucursal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAdSucursal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/ubicacion (1).png"))); // NOI18N
        lblAdSucursal.setText("     Correo Electronico");
        Inicio.add(lblAdSucursal, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 1520, 70));

        jLabel52.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pruebahogar/imagenes/Modern And Simple GYM Business (2).png"))); // NOI18N
        Inicio.add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(1260, 530, 260, 90));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 440, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 330, Short.MAX_VALUE)
        );

        Inicio.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 170, 440, 330));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 390, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 330, Short.MAX_VALUE)
        );

        Inicio.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 170, 390, 330));

        lblNombreA1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblNombreA1.setForeground(new java.awt.Color(54, 33, 89));
        lblNombreA1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNombreA1.setText("¡Construye tu mejor versión!");
        Inicio.add(lblNombreA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 560, 1500, -1));

        lblNombreA2.setFont(new java.awt.Font("Segoe UI", 1, 19)); // NOI18N
        lblNombreA2.setForeground(new java.awt.Color(54, 33, 89));
        lblNombreA2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/nuevo_cliente.png"))); // NOI18N
        lblNombreA2.setText(" Clientes nuevos el ultimo mes ");
        Inicio.add(lblNombreA2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 330, -1));

        lblNombreA3.setFont(new java.awt.Font("Segoe UI", 1, 19)); // NOI18N
        lblNombreA3.setForeground(new java.awt.Color(54, 33, 89));
        lblNombreA3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/321321.png"))); // NOI18N
        lblNombreA3.setText(" Ingresos Totales el ultimo mes");
        Inicio.add(lblNombreA3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 330, -1));

        lblNombreA5.setFont(new java.awt.Font("Segoe UI", 1, 19)); // NOI18N
        lblNombreA5.setForeground(new java.awt.Color(54, 33, 89));
        lblNombreA5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/grupo-de-edad.png"))); // NOI18N
        lblNombreA5.setText("  Promedio de Edad de los Clientes");
        Inicio.add(lblNombreA5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, 350, -1));

        lblNombreA7.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblNombreA7.setForeground(new java.awt.Color(54, 33, 89));
        lblNombreA7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNombreA7.setText("Nombre(S)");
        Inicio.add(lblNombreA7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 1520, -1));

        lblPromedio.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPromedio.setForeground(new java.awt.Color(54, 33, 89));
        lblPromedio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPromedio.setText("jLabel2");
        Inicio.add(lblPromedio, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 350, 100, -1));

        lblCLN.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCLN.setForeground(new java.awt.Color(54, 33, 89));
        lblCLN.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCLN.setText("jLabel2");
        Inicio.add(lblCLN, new org.netbeans.lib.awtextra.AbsoluteConstraints(397, 250, 110, -1));

        lblIngresos.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblIngresos.setForeground(new java.awt.Color(54, 33, 89));
        lblIngresos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblIngresos.setText("jLabel2");
        Inicio.add(lblIngresos, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 300, 100, -1));

        lblNombreA4.setFont(new java.awt.Font("Segoe UI", 1, 19)); // NOI18N
        lblNombreA4.setForeground(new java.awt.Color(54, 33, 89));
        lblNombreA4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNombreA4.setText("______________");
        Inicio.add(lblNombreA4, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 300, 120, -1));

        lblNombreA6.setFont(new java.awt.Font("Segoe UI", 1, 19)); // NOI18N
        lblNombreA6.setForeground(new java.awt.Color(54, 33, 89));
        lblNombreA6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNombreA6.setText("______________");
        Inicio.add(lblNombreA6, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 350, 120, -1));

        lblNombreA.setFont(new java.awt.Font("Segoe UI", 1, 19)); // NOI18N
        lblNombreA.setForeground(new java.awt.Color(54, 33, 89));
        lblNombreA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNombreA.setText("______________");
        Inicio.add(lblNombreA, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 250, 120, -1));

        pnVentanas.addTab("tab1", Inicio);

        Empleados.setBackground(new java.awt.Color(255, 255, 255));

        Empleados_Switch.setBackground(new java.awt.Color(255, 255, 255));
        Empleados_Switch.setForeground(new java.awt.Color(54, 33, 89));
        Empleados_Switch.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        Empleados_Switch.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Empleados_Switch.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Empleados_Switch.setMinimumSize(new java.awt.Dimension(247, 50));
        Empleados_Switch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Empleados_SwitchMouseClicked(evt);
            }
        });

        AAdministradores.setBackground(new java.awt.Color(255, 255, 255));

        Administradores.setBackground(new java.awt.Color(255, 255, 255));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pruebahogar/imagenes/admin.png"))); // NOI18N

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(54, 33, 89));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Administradores");

        txtEdadA.setForeground(new java.awt.Color(204, 204, 204));
        txtEdadA.setText("Edad");
        txtEdadA.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtEdadA.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtEdadA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtEdadAMouseClicked(evt);
            }
        });

        txtNombreA.setForeground(new java.awt.Color(204, 204, 204));
        txtNombreA.setText("Nombre(s)");
        txtNombreA.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtNombreA.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtNombreA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtNombreAMouseClicked(evt);
            }
        });

        txtAPA.setForeground(new java.awt.Color(204, 204, 204));
        txtAPA.setText("Apellido Paterno");
        txtAPA.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtAPA.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtAPA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtAPAMouseClicked(evt);
            }
        });

        txtAMA.setForeground(new java.awt.Color(204, 204, 204));
        txtAMA.setText("Apellido Materno");
        txtAMA.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtAMA.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtAMA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtAMAMouseClicked(evt);
            }
        });

        txtCURPA.setForeground(new java.awt.Color(204, 204, 204));
        txtCURPA.setText("CURP");
        txtCURPA.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtCURPA.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtCURPA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCURPAMouseClicked(evt);
            }
        });

        txtTelefonoA.setForeground(new java.awt.Color(204, 204, 204));
        txtTelefonoA.setText("Telefono");
        txtTelefonoA.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtTelefonoA.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtTelefonoA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTelefonoAMouseClicked(evt);
            }
        });

        txtDireccionA.setForeground(new java.awt.Color(204, 204, 204));
        txtDireccionA.setText("Direccion");
        txtDireccionA.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtDireccionA.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtDireccionA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtDireccionAMouseClicked(evt);
            }
        });

        cboHora.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Matutino", "Vespertino" }));

        txtSalarioA.setForeground(new java.awt.Color(204, 204, 204));
        txtSalarioA.setText("Salario");
        txtSalarioA.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtSalarioA.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtSalarioA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSalarioAMouseClicked(evt);
            }
        });

        jLabel36.setText("Turno");

        jLabel37.setText("Sucursal");

        javax.swing.GroupLayout AdministradoresLayout = new javax.swing.GroupLayout(Administradores);
        Administradores.setLayout(AdministradoresLayout);
        AdministradoresLayout.setHorizontalGroup(
            AdministradoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdministradoresLayout.createSequentialGroup()
                .addGroup(AdministradoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AdministradoresLayout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AdministradoresLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AdministradoresLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(txtNombreA, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AdministradoresLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(txtAPA, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AdministradoresLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(txtAMA, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AdministradoresLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(txtCURPA, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AdministradoresLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(txtTelefonoA, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AdministradoresLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(txtDireccionA, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AdministradoresLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(AdministradoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AdministradoresLayout.createSequentialGroup()
                                .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(cboHora, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(AdministradoresLayout.createSequentialGroup()
                                .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(cboSucursales1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(AdministradoresLayout.createSequentialGroup()
                                .addComponent(txtSalarioA, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(txtEdadA, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(27, 27, 27))
        );
        AdministradoresLayout.setVerticalGroup(
            AdministradoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdministradoresLayout.createSequentialGroup()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(txtNombreA, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(txtAPA, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(txtAMA, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(txtCURPA, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(txtTelefonoA, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(txtDireccionA, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(AdministradoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSalarioA, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEdadA, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(AdministradoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cboHora, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(AdministradoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboSucursales1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        btnRegistro1.setBackground(new java.awt.Color(255, 255, 255));
        btnRegistro1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnRegistro1.setForeground(new java.awt.Color(54, 33, 89));
        btnRegistro1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnRegistro1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/registro (1).png"))); // NOI18N
        btnRegistro1.setText(" Registrar");
        btnRegistro1.setToolTipText("");
        btnRegistro1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRegistro1.setOpaque(true);
        btnRegistro1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRegistro1MouseClicked(evt);
            }
        });

        jScrollPane2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        TablaAdministradores.setAutoCreateRowSorter(true);
        TablaAdministradores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Nombre(s)", "Apellido Paterno", "Apellido Materno", "Direccion", "Telefono", "Fecha de Inscripcion", "Fecha de Baja", "Correo Electronico", "Membresia", "Title 11"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TablaAdministradores.setComponentPopupMenu(PopUpEmpleados);
        TablaAdministradores.setGridColor(new java.awt.Color(255, 255, 255));
        TablaAdministradores.setSelectionBackground(new java.awt.Color(122, 72, 221));
        TablaAdministradores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaAdministradoresMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TablaAdministradores);
        if (TablaAdministradores.getColumnModel().getColumnCount() > 0) {
            TablaAdministradores.getColumnModel().getColumn(0).setPreferredWidth(2);
        }

        txtBuscarA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarAKeyReleased(evt);
            }
        });

        jLabel38.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pruebahogar/imagenes/lupa.png"))); // NOI18N

        btnEditarA.setBackground(new java.awt.Color(255, 255, 255));
        btnEditarA.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnEditarA.setForeground(new java.awt.Color(54, 33, 89));
        btnEditarA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnEditarA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/editar.png"))); // NOI18N
        btnEditarA.setText(" Editar");
        btnEditarA.setToolTipText("");
        btnEditarA.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditarA.setOpaque(true);
        btnEditarA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditarAMouseClicked(evt);
            }
        });

        jLabel54.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel54.setForeground(new java.awt.Color(54, 33, 89));
        jLabel54.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel54.setText("Buscar por Nombre");

        btnEditarA1.setBackground(new java.awt.Color(255, 255, 255));
        btnEditarA1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnEditarA1.setForeground(new java.awt.Color(54, 33, 89));
        btnEditarA1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnEditarA1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/enviar-datos.png"))); // NOI18N
        btnEditarA1.setText(" Crear y Enviar PDF");
        btnEditarA1.setToolTipText("");
        btnEditarA1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditarA1.setOpaque(true);
        btnEditarA1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditarA1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout AAdministradoresLayout = new javax.swing.GroupLayout(AAdministradores);
        AAdministradores.setLayout(AAdministradoresLayout);
        AAdministradoresLayout.setHorizontalGroup(
            AAdministradoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AAdministradoresLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(Administradores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AAdministradoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AAdministradoresLayout.createSequentialGroup()
                        .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel38)
                        .addGap(18, 18, 18)
                        .addComponent(txtBuscarA, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AAdministradoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1021, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AAdministradoresLayout.createSequentialGroup()
                            .addComponent(btnRegistro1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(58, 58, 58)
                            .addComponent(btnEditarA, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(50, 50, 50)
                            .addComponent(btnEditarA1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(135, 135, 135))))
                .addGap(24, 24, 24))
        );
        AAdministradoresLayout.setVerticalGroup(
            AAdministradoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AAdministradoresLayout.createSequentialGroup()
                .addGroup(AAdministradoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(AAdministradoresLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(AAdministradoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(AAdministradoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel38)
                                .addGroup(AAdministradoresLayout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(txtBuscarA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel54))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                        .addGroup(AAdministradoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRegistro1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEditarA, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEditarA1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38))
                    .addComponent(Administradores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Empleados_Switch.addTab("Administrador", AAdministradores);

        Asalariados.setBackground(new java.awt.Color(255, 255, 255));

        Administradores1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel44.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/reclutamiento.png"))); // NOI18N

        jLabel45.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(54, 33, 89));
        jLabel45.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel45.setText("Empleados");

        txtEdadE.setForeground(new java.awt.Color(204, 204, 204));
        txtEdadE.setText("Edad");
        txtEdadE.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtEdadE.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtEdadE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtEdadEMouseClicked(evt);
            }
        });

        txtNombreE.setForeground(new java.awt.Color(204, 204, 204));
        txtNombreE.setText("Nombre(s)");
        txtNombreE.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtNombreE.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtNombreE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtNombreEMouseClicked(evt);
            }
        });
        txtNombreE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreEActionPerformed(evt);
            }
        });

        txtAPE.setForeground(new java.awt.Color(204, 204, 204));
        txtAPE.setText("Apellido Paterno");
        txtAPE.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtAPE.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtAPE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtAPEMouseClicked(evt);
            }
        });

        txtAME.setForeground(new java.awt.Color(204, 204, 204));
        txtAME.setText("Apellido Materno");
        txtAME.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtAME.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtAME.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtAMEMouseClicked(evt);
            }
        });

        txtCURPE.setForeground(new java.awt.Color(204, 204, 204));
        txtCURPE.setText("CURP");
        txtCURPE.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtCURPE.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtCURPE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCURPEMouseClicked(evt);
            }
        });

        txtTelefonoE.setForeground(new java.awt.Color(204, 204, 204));
        txtTelefonoE.setText("Telefono");
        txtTelefonoE.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtTelefonoE.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtTelefonoE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTelefonoEMouseClicked(evt);
            }
        });

        txtDireccionE.setForeground(new java.awt.Color(204, 204, 204));
        txtDireccionE.setText("Direccion");
        txtDireccionE.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtDireccionE.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtDireccionE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtDireccionEMouseClicked(evt);
            }
        });

        txtSalarioE.setForeground(new java.awt.Color(204, 204, 204));
        txtSalarioE.setText("Salario");
        txtSalarioE.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtSalarioE.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtSalarioE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSalarioEMouseClicked(evt);
            }
        });

        jLabel48.setText("Rol");

        cboRolE.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Recepcionista", "Entrenador Personal", "Instructor de Clases Grupales", "Entrenador de Fuerza y Acondicionamiento", "Nutricionista o Dietista", "Personal de Mantenimiento y Limpieza (Conserje)", "Gerente de Ventas y Marketing", "Especialista en Atención al Cliente", "Personal de Seguridad", "Coordinador de Programas", "Terapeuta Deportivo o Masajista", "Gerente de Relaciones con los Miembros" }));
        cboRolE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboRolEActionPerformed(evt);
            }
        });

        cboTurnoE.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Matutino", "Vespertino" }));

        jLabel46.setText("Turno");

        javax.swing.GroupLayout Administradores1Layout = new javax.swing.GroupLayout(Administradores1);
        Administradores1.setLayout(Administradores1Layout);
        Administradores1Layout.setHorizontalGroup(
            Administradores1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Administradores1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(Administradores1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(Administradores1Layout.createSequentialGroup()
                        .addGroup(Administradores1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(Administradores1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboRolE, 0, 0, Short.MAX_VALUE)
                            .addComponent(cboTurnoE, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Administradores1Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtNombreE, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAPE, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAME, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCURPE, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTelefonoE, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDireccionE, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Administradores1Layout.createSequentialGroup()
                        .addComponent(txtSalarioE, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(txtEdadE, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
        );
        Administradores1Layout.setVerticalGroup(
            Administradores1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Administradores1Layout.createSequentialGroup()
                .addGroup(Administradores1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Administradores1Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtNombreE, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(txtAPE, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(txtAME, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(txtCURPE, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(txtTelefonoE, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(txtDireccionE, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(Administradores1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSalarioE, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEdadE, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Administradores1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboRolE, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Administradores1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cboTurnoE, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jLabel47.setText("Sucursal");

        btnRegistroE.setBackground(new java.awt.Color(255, 255, 255));
        btnRegistroE.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnRegistroE.setForeground(new java.awt.Color(54, 33, 89));
        btnRegistroE.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnRegistroE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/registro (1).png"))); // NOI18N
        btnRegistroE.setText(" Registrar");
        btnRegistroE.setToolTipText("");
        btnRegistroE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRegistroE.setOpaque(true);
        btnRegistroE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRegistroEMouseClicked(evt);
            }
        });

        btnEditarE.setBackground(new java.awt.Color(255, 255, 255));
        btnEditarE.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnEditarE.setForeground(new java.awt.Color(54, 33, 89));
        btnEditarE.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnEditarE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/editar.png"))); // NOI18N
        btnEditarE.setText(" Editar");
        btnEditarE.setToolTipText("");
        btnEditarE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditarE.setOpaque(true);
        btnEditarE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditarEMouseClicked(evt);
            }
        });

        jScrollPane3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        TablaEmpleados.setAutoCreateRowSorter(true);
        TablaEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Nombre(s)", "Apellido Paterno", "Apellido Materno", "Direccion", "Telefono", "Fecha de Inscripcion", "Fecha de Baja", "Correo Electronico", "Membresia", "Title 11"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TablaEmpleados.setComponentPopupMenu(PopUpAsalariados);
        TablaEmpleados.setGridColor(new java.awt.Color(255, 255, 255));
        TablaEmpleados.setSelectionBackground(new java.awt.Color(122, 72, 221));
        TablaEmpleados.setSelectionForeground(new java.awt.Color(204, 204, 204));
        TablaEmpleados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaEmpleadosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(TablaEmpleados);
        if (TablaEmpleados.getColumnModel().getColumnCount() > 0) {
            TablaEmpleados.getColumnModel().getColumn(0).setPreferredWidth(2);
        }

        jLabel41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pruebahogar/imagenes/lupa.png"))); // NOI18N

        txtBuscarE.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtBuscarE.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtBuscarE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarEKeyReleased(evt);
            }
        });

        btnEnviar_EM.setBackground(new java.awt.Color(255, 255, 255));
        btnEnviar_EM.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnEnviar_EM.setForeground(new java.awt.Color(54, 33, 89));
        btnEnviar_EM.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnEnviar_EM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/enviar-datos.png"))); // NOI18N
        btnEnviar_EM.setText("Crear y Enviar PDF");
        btnEnviar_EM.setToolTipText("");
        btnEnviar_EM.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEnviar_EM.setOpaque(true);
        btnEnviar_EM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEnviar_EMMouseClicked(evt);
            }
        });

        jLabel53.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(54, 33, 89));
        jLabel53.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel53.setText("Buscar por Nombre");

        javax.swing.GroupLayout AsalariadosLayout = new javax.swing.GroupLayout(Asalariados);
        Asalariados.setLayout(AsalariadosLayout);
        AsalariadosLayout.setHorizontalGroup(
            AsalariadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AsalariadosLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(Administradores1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AsalariadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1021, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(AsalariadosLayout.createSequentialGroup()
                        .addGroup(AsalariadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboSucursalesE, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(115, 115, 115)
                        .addComponent(btnRegistroE, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditarE, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEnviar_EM))
                    .addGroup(AsalariadosLayout.createSequentialGroup()
                        .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel41)
                        .addGap(20, 20, 20)
                        .addComponent(txtBuscarE, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        AsalariadosLayout.setVerticalGroup(
            AsalariadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AsalariadosLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(Administradores1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AsalariadosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(AsalariadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AsalariadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtBuscarE, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel53))
                    .addComponent(jLabel41, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addGroup(AsalariadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AsalariadosLayout.createSequentialGroup()
                        .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboSucursalesE, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AsalariadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(btnEditarE, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnRegistroE, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnEnviar_EM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(38, 38, 38))
        );

        Empleados_Switch.addTab("Empleado", Asalariados);

        txtContraA.setForeground(new java.awt.Color(204, 204, 204));
        txtContraA.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtContraA.setText("Contraseña");
        txtContraA.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtContraA.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtContraA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtContraAMouseClicked(evt);
            }
        });
        txtContraA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContraAActionPerformed(evt);
            }
        });

        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel39.setText("Cambiar Contraseña");

        jLabel40.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pruebahogar/imagenes/Modern And Simple GYM Business (2).png"))); // NOI18N

        javax.swing.GroupLayout EmpleadosLayout = new javax.swing.GroupLayout(Empleados);
        Empleados.setLayout(EmpleadosLayout);
        EmpleadosLayout.setHorizontalGroup(
            EmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EmpleadosLayout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addComponent(Empleados_Switch, javax.swing.GroupLayout.PREFERRED_SIZE, 1490, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(EmpleadosLayout.createSequentialGroup()
                .addGap(135, 135, 135)
                .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(txtContraA, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        EmpleadosLayout.setVerticalGroup(
            EmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EmpleadosLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(Empleados_Switch, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(EmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EmpleadosLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(EmpleadosLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(EmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtContraA, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel39))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pnVentanas.addTab("tab2", Empleados);

        Clientes.setBackground(new java.awt.Color(255, 255, 255));
        Clientes.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        TablaClientes.setAutoCreateRowSorter(true);
        TablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Nombre(s)", "Apellido Paterno", "Apellido Materno", "Direccion", "Telefono", "Fecha de Inscripcion", "Fecha de Baja", "Correo Electronico", "Membresia", "Title 11"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TablaClientes.setComponentPopupMenu(PopUpClientes);
        TablaClientes.setGridColor(new java.awt.Color(255, 255, 255));
        TablaClientes.setSelectionBackground(new java.awt.Color(122, 72, 221));
        TablaClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaClientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaClientes);
        if (TablaClientes.getColumnModel().getColumnCount() > 0) {
            TablaClientes.getColumnModel().getColumn(0).setPreferredWidth(2);
        }

        Clientes.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 110, 1190, 260));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pruebahogar/imagenes/cliente2.png"))); // NOI18N
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, 70, 80));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(54, 33, 89));
        jLabel6.setText("Cliente");
        jPanel4.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, 60, 30));

        txtCorreo.setForeground(new java.awt.Color(204, 204, 204));
        txtCorreo.setText("Correo Electronico");
        txtCorreo.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtCorreo.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtCorreo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCorreoMouseClicked(evt);
            }
        });
        jPanel4.add(txtCorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, 190, 30));

        txtNombre.setForeground(new java.awt.Color(204, 204, 204));
        txtNombre.setText("Nombre(s)");
        txtNombre.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtNombre.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtNombre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtNombreMouseClicked(evt);
            }
        });
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        jPanel4.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 190, 30));

        txtAP.setForeground(new java.awt.Color(204, 204, 204));
        txtAP.setText("Apellido Paterno");
        txtAP.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtAP.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtAP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtAPMouseClicked(evt);
            }
        });
        jPanel4.add(txtAP, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 190, 30));

        txtAM.setForeground(new java.awt.Color(204, 204, 204));
        txtAM.setText("Apellido Materno");
        txtAM.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtAM.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtAM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtAMMouseClicked(evt);
            }
        });
        jPanel4.add(txtAM, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 190, 30));

        txtCurp.setForeground(new java.awt.Color(204, 204, 204));
        txtCurp.setText("CURP");
        txtCurp.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtCurp.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtCurp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCurpMouseClicked(evt);
            }
        });
        jPanel4.add(txtCurp, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 190, 30));

        txtTelefono.setForeground(new java.awt.Color(204, 204, 204));
        txtTelefono.setText("Telefono");
        txtTelefono.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtTelefono.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtTelefono.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTelefonoMouseClicked(evt);
            }
        });
        jPanel4.add(txtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 190, 30));

        txtDireccion.setForeground(new java.awt.Color(204, 204, 204));
        txtDireccion.setText("Direccion");
        txtDireccion.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtDireccion.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtDireccion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtDireccionMouseClicked(evt);
            }
        });
        jPanel4.add(txtDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 190, 30));

        txtEdad.setForeground(new java.awt.Color(204, 204, 204));
        txtEdad.setText("Edad");
        txtEdad.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtEdad.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtEdad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtEdadMouseClicked(evt);
            }
        });
        jPanel4.add(txtEdad, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 440, 190, 30));

        jLabel30.setText("Membresias");
        jPanel4.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 490, -1, -1));

        jPanel4.add(cboMembresias, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 510, 150, 30));

        jLabel34.setText("Sucursales");
        jPanel4.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 550, -1, -1));

        jPanel4.add(cboSucursales, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 570, 150, 30));

        Clientes.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, -20, 240, 630));

        btnEditar.setBackground(new java.awt.Color(255, 255, 255));
        btnEditar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnEditar.setForeground(new java.awt.Color(54, 33, 89));
        btnEditar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/editar.png"))); // NOI18N
        btnEditar.setText("  Editar");
        btnEditar.setToolTipText("");
        btnEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnEditar.setOpaque(true);
        btnEditar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnEditarMouseMoved(evt);
            }
        });
        btnEditar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditarMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEditarMouseExited(evt);
            }
        });
        Clientes.add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 440, 170, 50));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pruebahogar/imagenes/Modern And Simple GYM Business (2).png"))); // NOI18N
        Clientes.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(1260, 530, 260, 90));

        btnRegistro.setBackground(new java.awt.Color(255, 255, 255));
        btnRegistro.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnRegistro.setForeground(new java.awt.Color(54, 33, 89));
        btnRegistro.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnRegistro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/registro (1).png"))); // NOI18N
        btnRegistro.setText("  Nuevo Registro");
        btnRegistro.setToolTipText("");
        btnRegistro.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnRegistro.setOpaque(true);
        btnRegistro.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnRegistroMouseMoved(evt);
            }
        });
        btnRegistro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRegistroMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnRegistroMouseExited(evt);
            }
        });
        Clientes.add(btnRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 440, 210, 50));

        jLabel35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pruebahogar/imagenes/lupa.png"))); // NOI18N
        Clientes.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 50, -1, -1));

        txtBuscar.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtBuscar.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });
        Clientes.add(txtBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 60, 200, -1));

        jLabel55.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel55.setForeground(new java.awt.Color(54, 33, 89));
        jLabel55.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel55.setText("Buscar por Nombre");
        Clientes.add(jLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 60, 200, -1));

        btnEditar1.setBackground(new java.awt.Color(255, 255, 255));
        btnEditar1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnEditar1.setForeground(new java.awt.Color(54, 33, 89));
        btnEditar1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnEditar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/enviar-datos.png"))); // NOI18N
        btnEditar1.setText("Crear y Enviar PDF");
        btnEditar1.setToolTipText("");
        btnEditar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditar1.setOpaque(true);
        btnEditar1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnEditar1MouseMoved(evt);
            }
        });
        btnEditar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditar1MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEditar1MouseExited(evt);
            }
        });
        Clientes.add(btnEditar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 440, 200, 50));

        pnVentanas.addTab("tab3", Clientes);

        Membresias.setBackground(new java.awt.Color(255, 255, 255));
        Membresias.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pruebahogar/imagenes/tarjeta-de-membresia1.png"))); // NOI18N

        jLabel42.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(54, 33, 89));
        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel42.setText("Membresias");

        txtNombreM.setForeground(new java.awt.Color(204, 204, 204));
        txtNombreM.setText("Nombre");
        txtNombreM.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtNombreM.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtNombreM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtNombreMMouseClicked(evt);
            }
        });
        txtNombreM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreMActionPerformed(evt);
            }
        });

        txtPrecioM.setForeground(new java.awt.Color(204, 204, 204));
        txtPrecioM.setText("Precio");
        txtPrecioM.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtPrecioM.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtPrecioM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPrecioMMouseClicked(evt);
            }
        });

        txtDescripcionM.setForeground(new java.awt.Color(204, 204, 204));
        txtDescripcionM.setText("Descripcion");
        txtDescripcionM.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtDescripcionM.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtDescripcionM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtDescripcionMMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPrecioM, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDescripcionM, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtNombreM)
                        .addComponent(jLabel42, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)))
                .addContainerGap(30, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(113, 113, 113))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtNombreM, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(txtPrecioM, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(txtDescripcionM, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87))
        );

        Membresias.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, 300, 290));

        jLabel43.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pruebahogar/imagenes/Modern And Simple GYM Business (2).png"))); // NOI18N
        Membresias.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(1260, 530, 260, 90));

        btnRegistroM.setBackground(new java.awt.Color(255, 255, 255));
        btnRegistroM.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnRegistroM.setForeground(new java.awt.Color(54, 33, 89));
        btnRegistroM.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnRegistroM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/REm.png"))); // NOI18N
        btnRegistroM.setText(" Registrar");
        btnRegistroM.setToolTipText("");
        btnRegistroM.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnRegistroM.setOpaque(true);
        btnRegistroM.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnRegistroMMouseMoved(evt);
            }
        });
        btnRegistroM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRegistroMMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnRegistroMMouseExited(evt);
            }
        });
        Membresias.add(btnRegistroM, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 430, 160, 50));

        jScrollPane4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        TablaMembresias.setAutoCreateRowSorter(true);
        TablaMembresias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Nombre(s)", "Apellido Paterno", "Apellido Materno", "Direccion", "Telefono", "Fecha de Inscripcion", "Fecha de Baja", "Correo Electronico", "Membresia", "Title 11"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TablaMembresias.setGridColor(new java.awt.Color(255, 255, 255));
        TablaMembresias.setSelectionBackground(new java.awt.Color(122, 72, 221));
        TablaMembresias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaMembresiasMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(TablaMembresias);
        if (TablaMembresias.getColumnModel().getColumnCount() > 0) {
            TablaMembresias.getColumnModel().getColumn(0).setPreferredWidth(2);
        }

        Membresias.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 140, 1080, 260));

        jLabel49.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pruebahogar/imagenes/lupa.png"))); // NOI18N
        Membresias.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 70, -1, -1));

        txtBuscarM.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtBuscarM.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtBuscarM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarMKeyReleased(evt);
            }
        });
        Membresias.add(txtBuscarM, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 80, 200, -1));

        btnEliminar.setBackground(new java.awt.Color(255, 255, 255));
        btnEliminar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(54, 33, 89));
        btnEliminar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/eliminar.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.setToolTipText("");
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnEliminar.setOpaque(true);
        btnEliminar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnEliminarMouseMoved(evt);
            }
        });
        btnEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEliminarMouseExited(evt);
            }
        });
        Membresias.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 430, 150, 50));

        btnEditarM.setBackground(new java.awt.Color(255, 255, 255));
        btnEditarM.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnEditarM.setForeground(new java.awt.Color(54, 33, 89));
        btnEditarM.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnEditarM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/editar.png"))); // NOI18N
        btnEditarM.setText(" Modificar / Migrar");
        btnEditarM.setToolTipText("");
        btnEditarM.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnEditarM.setOpaque(true);
        btnEditarM.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnEditarMMouseMoved(evt);
            }
        });
        btnEditarM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditarMMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEditarMMouseExited(evt);
            }
        });
        Membresias.add(btnEditarM, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 430, 210, 50));

        jLabel56.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel56.setForeground(new java.awt.Color(54, 33, 89));
        jLabel56.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel56.setText("Buscar por Nombre");
        Membresias.add(jLabel56, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 75, 200, 30));

        pnVentanas.addTab("tab4", Membresias);

        Sucursales.setBackground(new java.awt.Color(255, 255, 255));
        Sucursales.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pruebahogar/imagenes/gimnasio.png"))); // NOI18N

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(54, 33, 89));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Registro de Sucursal");

        txtNombreG.setForeground(new java.awt.Color(204, 204, 204));
        txtNombreG.setText("Nombre");
        txtNombreG.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtNombreG.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtNombreG.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtNombreGMouseClicked(evt);
            }
        });
        txtNombreG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreGActionPerformed(evt);
            }
        });

        txtDireccionG.setForeground(new java.awt.Color(204, 204, 204));
        txtDireccionG.setText("Direccion");
        txtDireccionG.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtDireccionG.setSelectionColor(new java.awt.Color(122, 72, 221));
        txtDireccionG.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtDireccionGMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNombreG, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(txtDireccionG, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(jLabel10)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtNombreG, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(txtDireccionG, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
        );

        Sucursales.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 300, 240));

        jLabel50.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pruebahogar/imagenes/Modern And Simple GYM Business (2).png"))); // NOI18N
        Sucursales.add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(1260, 530, 260, 90));

        jLabel51.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pruebahogar/imagenes/lupa.png"))); // NOI18N
        Sucursales.add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 70, -1, -1));

        txtBuscarG.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtBuscarG.setSelectionColor(new java.awt.Color(255, 0, 153));
        txtBuscarG.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarGKeyReleased(evt);
            }
        });
        Sucursales.add(txtBuscarG, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 80, 200, -1));

        jScrollPane5.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        TablaSucursales.setAutoCreateRowSorter(true);
        TablaSucursales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Nombre(s)", "Apellido Paterno", "Apellido Materno", "Direccion", "Telefono", "Fecha de Inscripcion", "Fecha de Baja", "Correo Electronico", "Membresia", "Title 11"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TablaSucursales.setComponentPopupMenu(PopUpSucursales);
        TablaSucursales.setGridColor(new java.awt.Color(255, 255, 255));
        TablaSucursales.setSelectionBackground(new java.awt.Color(122, 72, 221));
        TablaSucursales.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaSucursalesMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(TablaSucursales);
        if (TablaSucursales.getColumnModel().getColumnCount() > 0) {
            TablaSucursales.getColumnModel().getColumn(0).setPreferredWidth(2);
        }

        Sucursales.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 140, 1080, 260));

        btnRegistroG.setBackground(new java.awt.Color(255, 255, 255));
        btnRegistroG.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnRegistroG.setForeground(new java.awt.Color(54, 33, 89));
        btnRegistroG.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnRegistroG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/edificio-de-oficinas.png"))); // NOI18N
        btnRegistroG.setText(" Registrar");
        btnRegistroG.setToolTipText("");
        btnRegistroG.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnRegistroG.setOpaque(true);
        btnRegistroG.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnRegistroGMouseMoved(evt);
            }
        });
        btnRegistroG.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRegistroGMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnRegistroGMouseExited(evt);
            }
        });
        Sucursales.add(btnRegistroG, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 410, 160, 50));

        btnEditarG.setBackground(new java.awt.Color(255, 255, 255));
        btnEditarG.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnEditarG.setForeground(new java.awt.Color(54, 33, 89));
        btnEditarG.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnEditarG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/migracion.png"))); // NOI18N
        btnEditarG.setText(" Modificar/ Migrar");
        btnEditarG.setToolTipText("");
        btnEditarG.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnEditarG.setOpaque(true);
        btnEditarG.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnEditarGMouseMoved(evt);
            }
        });
        btnEditarG.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditarGMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEditarGMouseExited(evt);
            }
        });
        Sucursales.add(btnEditarG, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 410, 210, 50));

        btnEliminarG1.setBackground(new java.awt.Color(255, 255, 255));
        btnEliminarG1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnEliminarG1.setForeground(new java.awt.Color(54, 33, 89));
        btnEliminarG1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnEliminarG1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/eliminar.png"))); // NOI18N
        btnEliminarG1.setText("Eliminar");
        btnEliminarG1.setToolTipText("");
        btnEliminarG1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnEliminarG1.setOpaque(true);
        btnEliminarG1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnEliminarG1MouseMoved(evt);
            }
        });
        btnEliminarG1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarG1MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEliminarG1MouseExited(evt);
            }
        });
        Sucursales.add(btnEliminarG1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 410, 150, 50));

        jLabel33.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(54, 33, 89));
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel33.setText("Buscar por Nombre");
        Sucursales.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 80, 200, -1));

        pnVentanas.addTab("tab6", Sucursales);

        Graficas.setBackground(new java.awt.Color(255, 255, 255));
        Graficas.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pruebahogar/imagenes/Modern And Simple GYM Business (2).png"))); // NOI18N
        Graficas.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(1260, 530, 260, 90));

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 598, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 518, Short.MAX_VALUE)
        );

        Graficas.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, 600, 520));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 570, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 510, Short.MAX_VALUE)
        );

        Graficas.add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 30, 570, 510));

        pnVentanas.addTab("tab5", Graficas);

        PanelGeneral.add(pnVentanas, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 100, 1520, 650));

        getContentPane().add(PanelGeneral, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1800, 750));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PLinicioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PLinicioMouseClicked
        // TODO add your handling code here:
        pnVentanas.setSelectedIndex(0);
        lblTextoMorado.setText("Inicio");
        Graficas();
        clientesNuevosxMes();
        IngresosTotales_UltimoMes();
        promedio_edad();
    }//GEN-LAST:event_PLinicioMouseClicked

    private void PLinicioMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PLinicioMouseMoved
        // TODO add your handling code here:
        PLinicio.setBackground(new Color(85,65,118));
    }//GEN-LAST:event_PLinicioMouseMoved

    private void PLinicioMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PLinicioMouseExited
        // TODO add your handling code here:
        PLinicio.setBackground(new Color(64,43,100));
    }//GEN-LAST:event_PLinicioMouseExited

    private void PLempleadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PLempleadosMouseClicked
        // TODO add your handling code here:
        pnVentanas.setSelectedIndex(1);
        lblTextoMorado.setText("Control de Empleados");
    }//GEN-LAST:event_PLempleadosMouseClicked

    private void PLempleadosMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PLempleadosMouseMoved
        // TODO add your handling code here:
        PLempleados.setBackground(new Color(85,65,118));
    }//GEN-LAST:event_PLempleadosMouseMoved

    private void PLempleadosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PLempleadosMouseExited
        // TODO add your handling code here:
        PLempleados.setBackground(new Color(64,43,100));
    }//GEN-LAST:event_PLempleadosMouseExited

    private void PLclientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PLclientesMouseClicked
        // TODO add your handling code here:
        pnVentanas.setSelectedIndex(2);
        lblTextoMorado.setText("Gestion de Clientes");
    }//GEN-LAST:event_PLclientesMouseClicked

    private void PLclientesMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PLclientesMouseMoved
        // TODO add your handling code here:
        PLclientes.setBackground(new Color(85,65,118));
    }//GEN-LAST:event_PLclientesMouseMoved

    private void PLclientesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PLclientesMouseExited
        // TODO add your handling code here:
        PLclientes.setBackground(new Color(64,43,100));
    }//GEN-LAST:event_PLclientesMouseExited

    private void PLmembresiasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PLmembresiasMouseClicked
        // TODO add your handling code here:
        pnVentanas.setSelectedIndex(3);
        lblTextoMorado.setText("Control de Membresias");
    }//GEN-LAST:event_PLmembresiasMouseClicked

    private void PLmembresiasMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PLmembresiasMouseMoved
        // TODO add your handling code here:
        PLmembresias.setBackground(new Color(85,65,118));
    }//GEN-LAST:event_PLmembresiasMouseMoved

    private void PLmembresiasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PLmembresiasMouseExited
        // TODO add your handling code here:
        PLmembresias.setBackground(new Color(64,43,100));
    }//GEN-LAST:event_PLmembresiasMouseExited

    private void PLusuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PLusuarioMouseClicked
        // TODO add your handling code here:
        this.dispose();
        login log = new login();
        log.setVisible(true);
    }//GEN-LAST:event_PLusuarioMouseClicked

    private void PLusuarioMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PLusuarioMouseMoved
        // TODO add your handling code here:
        PLusuario.setBackground(new Color(85,65,118));
    }//GEN-LAST:event_PLusuarioMouseMoved

    private void PLusuarioMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PLusuarioMouseExited
        // TODO add your handling code here:
         PLusuario.setBackground(new Color(64,43,100));
    }//GEN-LAST:event_PLusuarioMouseExited

    private void PLsalirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PLsalirMouseClicked
        // TODO add your handling code here:
         int response = JOptionPane.showConfirmDialog(Admin.this,
                    "¿Seguro que deseas cerrar el programa?",
                    "Confirmar Cierre",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE
                );

                // Si el usuario selecciona "Sí", cerrar el programa
                if (response == JOptionPane.YES_OPTION) {
                    System.exit(0); // Termina la ejecución de la aplicación
                }
    }//GEN-LAST:event_PLsalirMouseClicked

    private void PLsalirMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PLsalirMouseMoved
        // TODO add your handling code here:
        PLsalir.setBackground(new Color(85,65,118));
    }//GEN-LAST:event_PLsalirMouseMoved

    private void PLsalirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PLsalirMouseExited
        // TODO add your handling code here:
        PLsalir.setBackground(new Color(64,43,100));
    }//GEN-LAST:event_PLsalirMouseExited

    private void txtCorreoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCorreoMouseClicked
        // TODO add your handling code here:
        String aux = "Correo Electronico";

        if (txtCorreo.getText().isEmpty() || txtCorreo.getText().equals(aux)){
            txtCorreo.setForeground(new Color(54,33,89));
            txtCorreo.setText("");
        }
  
    }//GEN-LAST:event_txtCorreoMouseClicked

    private void txtNombreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNombreMouseClicked
        // TODO add your handling code here:
        String aux = "Nombre(s)";
        if (txtNombre.getText().isEmpty() || txtNombre.getText().equals(aux)){
             txtNombre.setForeground(new Color(54,33,89));
            txtNombre.setText("");
        }
    }//GEN-LAST:event_txtNombreMouseClicked

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtAPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtAPMouseClicked
        // TODO add your handling code here:
        String aux = "Apellido Paterno";
        if (txtAP.getText().isEmpty() || txtAP.getText().equals(aux)){
            txtAP.setForeground(new Color(54,33,89));
            txtAP.setText("");
        }  
    }//GEN-LAST:event_txtAPMouseClicked

    private void txtAMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtAMMouseClicked
        // TODO add your handling code here:
        String aux = "Apellido Materno";
        if (txtAM.getText().isEmpty() || txtAM.getText().equals(aux)){
            txtAM.setForeground(new Color(54,33,89));
            txtAM.setText("");
        }
    }//GEN-LAST:event_txtAMMouseClicked

    private void txtCurpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCurpMouseClicked
        // TODO add your handling code here:
        String aux = "CURP";
        if (txtCurp.getText().isEmpty() || txtCurp.getText().equals(aux)){
            txtCurp.setForeground(new Color(54,33,89));
            txtCurp.setText("");
        }
    }//GEN-LAST:event_txtCurpMouseClicked

    private void txtTelefonoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTelefonoMouseClicked
        // TODO add your handling code here:
        String aux = "Telefono";
        if (txtTelefono.getText().isEmpty() || txtTelefono.getText().equals(aux)){
            txtTelefono.setForeground(new Color(54,33,89));
            txtTelefono.setText("");
        }
    }//GEN-LAST:event_txtTelefonoMouseClicked

    private void txtDireccionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDireccionMouseClicked
        // TODO add your handling code here:
        String aux = "Direccion";
        if (txtDireccion.getText().isEmpty() || txtDireccion.getText().equals(aux)){
            txtDireccion.setForeground(new Color(54,33,89));
            txtDireccion.setText("");
        }
    }//GEN-LAST:event_txtDireccionMouseClicked

    private void btnEditarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarMouseMoved
        // TODO add your handling code here:
        btnEditar.setBackground(Color.white);
    }//GEN-LAST:event_btnEditarMouseMoved

    private void btnEditarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarMouseClicked
        String Nombre = txtNombre.getText().trim();
        String A_Paterno = txtAP.getText().trim();
        String A_Materno = txtAM.getText().trim();
        String CURP = txtCurp.getText().trim();
        String Direccion = txtDireccion.getText().trim();
        String Telefono = txtTelefono.getText().trim();
        String edadStr = txtEdad.getText().trim();
        String correo = txtCorreo.getText().trim();

        String Membresia = (String) cboMembresias.getSelectedItem();
        String Sucursal = (String) cboSucursales.getSelectedItem();
        
        
        fila = TablaClientes.getSelectedRow();
        int id = Integer.parseInt((String) TablaClientes.getValueAt(fila, 0)); ///////////////////---------------------------------IDPERsona
        // Validar que el teléfono contenga solo números y tenga entre 7 y 10 caracteres
        if (!Telefono.matches("\\d{7,10}")) {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese un número de teléfono válido (7-10 dígitos).", "Teléfono inválido", JOptionPane.ERROR_MESSAGE);
        return;
        }
        
        // Validar la CURP
        if (!CURP.matches("^[A-Z]{4}\\d{6}[HM][A-Z]{5}[A-Z0-9]{2}$")) {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese una CURP válida.", "CURP inválida", JOptionPane.ERROR_MESSAGE);
        return;
        }
        
        // Validar el correo electrónico con dominios específicos
        if (!correo.matches("^[\\w.-]+@(gmail\\.com|hotmail\\.com|yahoo\\.com|outlook\\.com)$")) {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese un correo electrónico válido con un dominio permitido (gmail.com, hotmail.com, yahoo.com, outlook.com).", "Correo inválido", JOptionPane.ERROR_MESSAGE);
        return;
        }
        
        
 //----------------------------------------------------------------------------------------------------Selecciona los datos del registro
          try {
            int Edad = Integer.parseInt(edadStr);
            Clases.Metodos objetoRegistro = new Clases.Metodos();


            if (id != -1) {
                // Llamar al método para guardar el correo y la fecha de inscripción del cliente
                objetoRegistro.ActualizarCliente(id, Nombre, A_Paterno, A_Materno, CURP, Direccion, Telefono, Edad, correo);
                
                objetoRegistro.ActualizarMembresia(Membresia, id, Sucursal);
                JOptionPane.showMessageDialog(this, "Cliente modficado exitosamente.");
          
                LimpiarCampos();
                
            } else {
                JOptionPane.showMessageDialog(this, "Error al obtener el ID de la persona.", "Error", JOptionPane.ERROR_MESSAGE);
            }

            
            
        } 
        catch (Exception e) { // General catch for unexpected exceptions
            JOptionPane.showMessageDialog(this, "Error al guardar los datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
        
        mostrarDatos();
        mostrarTodasM();
        mostrarTodasSucursales();
        
        
        Clases.Metodos objetoRegistro = new Clases.Metodos();
      
        try {
            objetoRegistro.crearPDF_EC(id);
        } catch (MalformedURLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }//GEN-LAST:event_btnEditarMouseClicked

    private void btnEditarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarMouseExited
        // TODO add your handling code here:
        btnEditar.setBackground(Color.WHITE);
    }//GEN-LAST:event_btnEditarMouseExited

    private void txtEdadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtEdadMouseClicked
        // TODO add your handling code here:
        String aux = "Edad";
        if (txtEdad.getText().isEmpty() || txtEdad.getText().equals(aux)){
            txtEdad.setForeground(new Color(54,33,89));
            txtEdad.setText("");
        }
    }//GEN-LAST:event_txtEdadMouseClicked

    private void PLSucursalesMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PLSucursalesMouseMoved
        // TODO add your handling code here:
        PLSucursales.setBackground(new Color(85,65,118));
    }//GEN-LAST:event_PLSucursalesMouseMoved

    private void PLSucursalesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PLSucursalesMouseClicked
        // TODO add your handling code here:
        pnVentanas.setSelectedIndex(4);
        lblTextoMorado.setText("Control de Sucursales");
    }//GEN-LAST:event_PLSucursalesMouseClicked

    private void PLSucursalesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PLSucursalesMouseExited
        // TODO add your handling code here:
        PLSucursales.setBackground(new Color(64,43,100));     
    }//GEN-LAST:event_PLSucursalesMouseExited

    ////////////////Evento tabla
    
    
    private void TablaClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaClientesMouseClicked
        // TODO add your handling code here:
        fila = TablaClientes.getSelectedRow();
        
        int id = Integer.parseInt((String) TablaClientes.getValueAt(fila, 0)); ///////////////////---------------------------------IDPERsona
        
        PreparedStatement ps = null;
        ResultSet rs = null;
        
        String consulta = "select edad,telefono,curp from persona where id_persona = ?";
        
        try {
        
            cn = con.conectar();
            ps = cn.prepareStatement(consulta);
            ps.setInt(1, id);
            rs = ps.executeQuery();
            if (rs.next()) {
                String Edad = rs.getString(1);
                String Telefono = rs.getString(2);
                String Curp = rs.getString(3);

                txtEdad.setText(Edad);
                txtEdad.setForeground(Morado_Fuerte);
                
                txtTelefono.setText(Telefono);
                txtTelefono.setForeground(Morado_Fuerte);
                
                txtCurp.setText(Curp);
                txtCurp.setForeground(Morado_Fuerte);
            }
            
        } 
        catch (Exception e) {
        }
        
        //System.out.println(id);
        
        txtNombre.setText(TablaClientes.getValueAt(fila, 1).toString()       );
        txtNombre.setForeground(Morado_Fuerte);
        
        txtAP.setText(TablaClientes.getValueAt(fila, 2).toString());
        txtAP.setForeground(Morado_Fuerte);
        
        txtAM.setText(TablaClientes.getValueAt(fila, 3).toString());
        txtAM.setForeground(Morado_Fuerte);
        
        txtDireccion.setText(TablaClientes.getValueAt(fila, 4).toString());
        txtDireccion.setForeground(Morado_Fuerte);
        
        txtCorreo.setText(TablaClientes.getValueAt(fila, 5).toString());
        txtCorreo.setForeground(Morado_Fuerte);
        
        cboMembresias.setSelectedItem(TablaClientes.getValueAt(fila, 8).toString());
        cboSucursales.setSelectedItem(TablaClientes.getValueAt(fila, 9).toString());
        
        
        
        
    }//GEN-LAST:event_TablaClientesMouseClicked
 


    private void btnRegistroMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistroMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegistroMouseMoved

    private void btnRegistroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistroMouseClicked
        // TODO add your handling code here:
        String Nombre = txtNombre.getText().trim();
        String A_Paterno = txtAP.getText().trim();
        String A_Materno = txtAM.getText().trim();
        String CURP = txtCurp.getText().trim();
        String Direccion = txtDireccion.getText().trim();
        String Telefono = txtTelefono.getText().trim();
        String edadStr = txtEdad.getText().trim();
        String correo = txtCorreo.getText().trim();
        java.util.Date fechaInscripcion = new java.util.Date(); // Fecha de inscripción actual

        String Membresia = (String) cboMembresias.getSelectedItem();
        String Sucursal = (String) cboSucursales.getSelectedItem();

        // Verificar que todos los campos estén llenos
        if (Nombre.isEmpty() || A_Paterno.isEmpty() || A_Materno.isEmpty() || CURP.isEmpty() || Direccion.isEmpty() || Telefono.isEmpty() || edadStr.isEmpty() || correo.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, llene todos los campos.", "Campos vacíos", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Validar la CURP
        if (!CURP.matches("^[A-Z]{4}\\d{6}[HM][A-Z]{5}[A-Z0-9]{2}$")) {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese una CURP válida.", "CURP inválida", JOptionPane.ERROR_MESSAGE);
        return;
        }
        
        // Validar que el teléfono contenga solo números y tenga entre 7 y 10 caracteres
        if (!Telefono.matches("\\d{7,10}")) {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese un número de teléfono válido (7-10 dígitos).", "Teléfono inválido", JOptionPane.ERROR_MESSAGE);
        return;
        }
        
        // Validar el correo electrónico con dominios específicos
        if (!correo.matches("^[\\w.-]+@(gmail\\.com|hotmail\\.com|yahoo\\.com|outlook\\.com)$")) {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese un correo electrónico válido con un dominio permitido (gmail.com, hotmail.com, yahoo.com, outlook.com).", "Correo inválido", JOptionPane.ERROR_MESSAGE);
        return;
        }

        try {
            // Convertir Edad a entero
            int Edad = Integer.parseInt(edadStr);
           
            Clases.Metodos objetoRegistro = new Clases.Metodos();
            objetoRegistro.GuardarDatosPersona(Nombre, A_Paterno, A_Materno, CURP, Direccion, Telefono, Edad);
            int id_cliente = objetoRegistro.obtenerUltimoIdPersona();
            

            if (id_cliente != -1) {
                
                objetoRegistro.GuardarCorreoYFechaCliente(id_cliente, correo, new java.sql.Date(fechaInscripcion.getTime()));

                JOptionPane.showMessageDialog(this, "Cliente registrado exitosamente.");
                
                LimpiarCampos();

            } else {
                JOptionPane.showMessageDialog(this, "Error al obtener el ID de la persona.", "Error", JOptionPane.ERROR_MESSAGE);
            }

            objetoRegistro.setMembresia(Membresia, id_cliente);
            int id_m = objetoRegistro.obtenerUltimoIdMembresia();
            
            objetoRegistro.setGimnasio(Sucursal, id_m, new java.sql.Date(fechaInscripcion.getTime()));

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese una edad válida.", "Edad inválida", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) { // General catch for unexpected exceptions
            JOptionPane.showMessageDialog(this, "Error al guardar los datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
         
        mostrarDatos();
        mostrarTodasM();
        mostrarTodasSucursales();
         
        Clases.Metodos objetoRegistro = new Clases.Metodos();
        
        int id_cliente = objetoRegistro.obtenerUltimoIdPersona();
        
        
        
        
        try {
            objetoRegistro.crearPDF(id_cliente);
        } catch (MalformedURLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
           
    }//GEN-LAST:event_btnRegistroMouseClicked

    private void btnRegistroMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistroMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegistroMouseExited

    private void AltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AltaActionPerformed
        fila = TablaClientes.getSelectedRow();
        int id = Integer.parseInt((String) TablaClientes.getValueAt(fila, 0)); ///////////////////---------------------------------IDCliente        
        Clases.Metodos m = new Clases.Metodos();
        m.ActualizarFecha(id);

        mostrarDatos();
        mostrarTodasM();

    }//GEN-LAST:event_AltaActionPerformed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        // TODO add your handling code here:
        mostrarDatos();
        
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void txtNombreAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNombreAMouseClicked
        // TODO add your handling code here:
        String aux = "Nombre(s)";
        if (txtNombreA.getText().isEmpty() || txtNombreA.getText().equals(aux)){
            txtNombreA.setForeground(new Color(54,33,89));
            txtNombreA.setText("");
        } 
    }//GEN-LAST:event_txtNombreAMouseClicked

    private void txtAPAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtAPAMouseClicked
        // TODO add your handling code here:
        String aux = "Apellido Paterno";
        
        if (txtAPA.getText().isEmpty() || txtAPA.getText().equals(aux)){
           txtAPA.setText("");
           txtAPA.setForeground(new Color(54,33,89));
        } 
    }//GEN-LAST:event_txtAPAMouseClicked

    private void txtAMAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtAMAMouseClicked
        String aux = "Apellido Materno";
        
        if (txtAMA.getText().isEmpty() || txtAMA.getText().equals(aux)){
            txtAMA.setForeground(new Color(54,33,89));
            txtAMA.setText("");
        }
    }//GEN-LAST:event_txtAMAMouseClicked

    private void txtCURPAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCURPAMouseClicked
        String aux = "CURP";
        if (txtCURPA.getText().isEmpty() || txtCURPA.getText().equals(aux)) {
            txtCURPA.setForeground(new Color(54, 33, 89));
            txtCURPA.setText("");
        }
    }//GEN-LAST:event_txtCURPAMouseClicked

    private void txtTelefonoAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTelefonoAMouseClicked
        String aux = "Telefono";
        if (txtTelefonoA.getText().isEmpty() || txtTelefonoA.getText().equals(aux)){
            txtTelefonoA.setForeground(new Color(54,33,89));
            txtTelefonoA.setText(""); 
        }
    }//GEN-LAST:event_txtTelefonoAMouseClicked

    private void txtDireccionAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDireccionAMouseClicked
        String aux = "Direccion";
        if (txtDireccionA.getText().isEmpty() || txtDireccionA.getText().equals(aux)){
            txtDireccionA.setForeground(new Color(54,33,89));
            txtDireccionA.setText("");
        } 
    }//GEN-LAST:event_txtDireccionAMouseClicked

    private void txtSalarioAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSalarioAMouseClicked
        String aux = "Salario";
        if (txtSalarioA.getText().isEmpty() || txtSalarioA.getText().equals(aux)){
            txtSalarioA.setForeground(new Color(54,33,89));
            txtSalarioA.setText("");
        } 
    }//GEN-LAST:event_txtSalarioAMouseClicked

    private void btnRegistro1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistro1MouseClicked
        String Nombre = txtNombreA.getText().trim();
        String A_Paterno = txtAPA.getText().trim();
        String A_Materno = txtAMA.getText().trim();
        String CURP = txtCURPA.getText().trim();
        String Direccion = txtDireccionA.getText().trim();
        String Telefono = txtTelefonoA.getText().trim();
        String edadStr = txtEdadA.getText().trim();
        String Salario = txtSalarioA.getText().trim();
        String Horario = (String) cboHora.getSelectedItem();
        String Sucursal = (String) cboSucursales1.getSelectedItem();
        java.util.Date fechaContratacion = new java.util.Date(); // Fecha de inscripción actual

        if (Nombre.isEmpty() || A_Paterno.isEmpty() || A_Materno.isEmpty() || CURP.isEmpty() || Direccion.isEmpty() || Telefono.isEmpty() || edadStr.isEmpty() || Salario.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, llene todos los campos.", "Campos vacíos", JOptionPane.ERROR_MESSAGE);
            return;
        }
        // Validar que el teléfono contenga solo números y tenga entre 7 y 10 caracteres
        if (!Telefono.matches("\\d{7,10}")) {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese un número de teléfono válido (7-10 dígitos).", "Teléfono inválido", JOptionPane.ERROR_MESSAGE);
        return;
        }
        
        // Validar la CURP
        if (!CURP.matches("^[A-Z]{4}\\d{6}[HM][A-Z]{5}[A-Z0-9]{2}$")) {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese una CURP válida.", "CURP inválida", JOptionPane.ERROR_MESSAGE);
        return;
        }

        try {

            int Edad = Integer.parseInt(edadStr);
            int SalarioE = Integer.parseInt(Salario);

            if (CURP.length() >= 4) {
                String correo_empleado = A_Materno + CURP.substring(CURP.length() - 4) + "@gmail.com";

                String contra_admin = Metodos.generarContraseñaAleatoria(10);
                Clases.Metodos objetoRegistro = new Clases.Metodos();

                objetoRegistro.GuardarDatosPersona(Nombre, A_Paterno, A_Materno, CURP, Direccion, Telefono, Edad);

                int id_empleado = objetoRegistro.obtenerUltimoIdPersona();
                int id_admin = objetoRegistro.obtenerUltimoIdPersona();

                if (id_empleado != -1) {
                    objetoRegistro.GuardarDatosEmpleado(id_empleado, correo_empleado, SalarioE, Horario, new java.sql.Date(fechaContratacion.getTime()));

                } else {
                    JOptionPane.showMessageDialog(this, "Error al obtener el ID de la persona.", "Error", JOptionPane.ERROR_MESSAGE);
                }
                if (id_admin != -1) {
                    objetoRegistro.GuardarContraAdmin(id_admin, contra_admin);
                    
                    
                    JOptionPane.showMessageDialog(this, "Administrador registrado correctamente.");
                    objetoRegistro.setGimnasioEmpleado(Sucursal, id_admin, new java.sql.Date(fechaContratacion.getTime()));
                    
                    objetoRegistro.crearPDFAdministrador(id_admin);
                    
                    limpiarAdmin();
                } else {
                    JOptionPane.showMessageDialog(this, "Error al obtener el ID de la persona.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } 

            
            else {
                JOptionPane.showMessageDialog(this, "Por favor, ingrese un CURP valida", "Error en el CURP", JOptionPane.ERROR_MESSAGE);
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese digitos validos en los campos de edad y/o salario.", "Error en el formato de registro de Edad y/o Salario", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) { // General catch for unexpected exceptions
            JOptionPane.showMessageDialog(this, "Error al guardar los datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    
        mostrarDatosAdmin();
        mostrarTodasSucursales();
        
    }//GEN-LAST:event_btnRegistro1MouseClicked

    private void txtEdadAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtEdadAMouseClicked
        String aux = "Edad";
        if (txtEdadA.getText().isEmpty() || txtEdadA.getText().equals(aux)){
            txtEdadA.setForeground(new Color(54,33,89));
            txtEdadA.setText("");
        }
    }//GEN-LAST:event_txtEdadAMouseClicked

    private void TablaAdministradoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaAdministradoresMouseClicked
        // TODO add your handling code here:
        // TODO add your handling code here:
        filaA = TablaAdministradores.getSelectedRow();
        
        int id = Integer.parseInt((String) TablaAdministradores.getValueAt(filaA, 0)); ///////////////////---------------------------------IDPERsona
        
        PreparedStatement ps = null;
        ResultSet rs = null;
        
        String consulta = "select edad,telefono,curp,direccion from persona where id_persona = ?";
        
        try {
        
            cn = con.conectar();
            ps = cn.prepareStatement(consulta);
            ps.setInt(1, id);
            rs = ps.executeQuery();
            if (rs.next()) {
                String Edad = rs.getString(1);
                String Telefono = rs.getString(2);
                String Curp = rs.getString(3);
                String direccion = rs.getString(4);
                txtEdadA.setText(Edad);
                txtEdadA.setForeground(Morado_Fuerte);
                
                txtTelefonoA.setText(Telefono);
                txtTelefonoA.setForeground(Morado_Fuerte);
                
                txtCURPA.setText(Curp);
                txtCURPA.setForeground(Morado_Fuerte);
                
                txtDireccionA.setText(direccion);
                txtDireccionA.setForeground(Morado_Fuerte);
            }
            
        } 
        catch (Exception e) {
        }
        
        //System.out.println(id);
        
        txtNombreA.setText(TablaAdministradores.getValueAt(filaA, 1).toString());
        txtNombreA.setForeground(new Color(54,33,89));
        
        txtAPA.setText(TablaAdministradores.getValueAt(filaA, 2).toString());
        txtAPA.setForeground(Morado_Fuerte);
        
        txtAMA.setText(TablaAdministradores.getValueAt(filaA, 3).toString());
        txtAMA.setForeground(Morado_Fuerte);
        
        cboSucursales1.setSelectedItem(TablaAdministradores   .getValueAt(filaA, 8).toString());
        cboHora.setSelectedItem(TablaAdministradores.getValueAt(filaA, 9).toString());
        
        txtSalarioA.setText(TablaAdministradores.getValueAt(filaA, 10).toString() );
        txtSalarioA.setForeground(Morado_Fuerte);
        
        txtContraA.setText(TablaAdministradores.getValueAt(filaA, 5).toString());
        txtContraA.setForeground(Morado_Fuerte);
        
    }//GEN-LAST:event_TablaAdministradoresMouseClicked

    private void txtBuscarAKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarAKeyReleased
        // TODO add your handling code here:
        mostrarDatosAdmin();
    }//GEN-LAST:event_txtBuscarAKeyReleased

    private void AltaEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AltaEActionPerformed
        // TODO add your handling code here:
        filaA = TablaAdministradores.getSelectedRow();
        int id_A = Integer.parseInt((String)TablaAdministradores.getValueAt(filaA, 0)); ///////////////////---------------------------------ID_Empleado
        
        Clases.Metodos m = new Clases.Metodos();
        m.ActualizarFechaEmpleados(id_A);
        mostrarDatosAdmin();
        
    }//GEN-LAST:event_AltaEActionPerformed

    private void txtContraAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtContraAMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContraAMouseClicked

    private void txtContraAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContraAActionPerformed
        // TODO add your handling code here:
        String aux = "Contraseña";
        if (txtContraA.getText().isEmpty() || txtContraA.getText().equals(aux)){
            txtContraA.setForeground(new Color(54,33,89));
            txtContraA.setText("");
        }
    }//GEN-LAST:event_txtContraAActionPerformed

    private void txtEdadEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtEdadEMouseClicked
        String aux = "Edad";
        if (txtEdadE.getText().isEmpty() || txtEdadE.getText().equals(aux)){
            txtEdadE.setForeground(new Color(54,33,89));
            txtEdadE.setText("");
        }
    }//GEN-LAST:event_txtEdadEMouseClicked

    private void txtNombreEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNombreEMouseClicked
        String aux = "Nombre(s)";
        if (txtNombreE.getText().isEmpty() || txtNombreE.getText().equals(aux)){
            txtNombreE.setForeground(new Color(54,33,89));
            txtNombreE.setText("");
        } 
    }//GEN-LAST:event_txtNombreEMouseClicked

    private void txtAPEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtAPEMouseClicked
        String aux = "Apellido Paterno";
        if (txtAPE.getText().isEmpty() || txtAPE.getText().equals(aux)){
           txtAPE.setText("");
           txtAPE.setForeground(new Color(54,33,89));
        }
    }//GEN-LAST:event_txtAPEMouseClicked

    private void txtAMEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtAMEMouseClicked
        String aux = "Apellido Materno";
        if (txtAME.getText().isEmpty() || txtAME.getText().equals(aux)){
            txtAME.setForeground(new Color(54,33,89));
            txtAME.setText("");
        }
    }//GEN-LAST:event_txtAMEMouseClicked

    private void txtCURPEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCURPEMouseClicked
        String aux = "CURP";
        if (txtCURPE.getText().isEmpty() || txtCURPE.getText().equals(aux)) {
            txtCURPE.setForeground(new Color(54, 33, 89));
            txtCURPE.setText("");
        }
    }//GEN-LAST:event_txtCURPEMouseClicked

    private void txtTelefonoEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTelefonoEMouseClicked
        String aux = "Telefono";
        if (txtTelefonoE.getText().isEmpty() || txtTelefonoE.getText().equals(aux)){
            txtTelefonoE.setForeground(new Color(54,33,89));
            txtTelefonoE.setText(""); 
        }
    }//GEN-LAST:event_txtTelefonoEMouseClicked

    private void txtDireccionEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDireccionEMouseClicked
        String aux = "Direccion";
        if (txtDireccionE.getText().isEmpty() || txtDireccionE.getText().equals(aux)){
            txtDireccionE.setForeground(new Color(54,33,89));
            txtDireccionE.setText("");
        }
    }//GEN-LAST:event_txtDireccionEMouseClicked

    private void txtSalarioEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSalarioEMouseClicked
        String aux = "Salario";
        if (txtSalarioE.getText().isEmpty() || txtSalarioE.getText().equals(aux)){
            txtSalarioE.setForeground(new Color(54,33,89));
            txtSalarioE.setText("");
        } 
    }//GEN-LAST:event_txtSalarioEMouseClicked

    private void cboRolEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboRolEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboRolEActionPerformed

    private void btnRegistroEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistroEMouseClicked
        String Nombre = txtNombreE.getText().trim();
        String A_Paterno = txtAPE.getText().trim();
        String A_Materno = txtAME.getText().trim();
        String CURP = txtCURPE.getText().trim();
        String Direccion = txtDireccionE.getText().trim();
        String Telefono = txtTelefonoE.getText().trim();
        String edadStr = txtEdadE.getText().trim();
        String Salario = txtSalarioE.getText().trim();
        
        String Horario = (String) cboTurnoE.getSelectedItem();
        String Sucursal = (String) cboSucursalesE.getSelectedItem();
        String Rol = (String) cboRolE.getSelectedItem();
        
        java.util.Date fechaContratacion = new java.util.Date();

        if (Nombre.isEmpty() || A_Paterno.isEmpty() || A_Materno.isEmpty() || CURP.isEmpty() || Direccion.isEmpty() || Telefono.isEmpty() || edadStr.isEmpty() || Salario.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, llene todos los campos.", "Campos vacíos", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Validar que el teléfono contenga solo números y tenga entre 7 y 10 caracteres
        if (!Telefono.matches("\\d{7,10}")) {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese un número de teléfono válido (7-10 dígitos).", "Teléfono inválido", JOptionPane.ERROR_MESSAGE);
        return;
        }
        
        // Validar la CURP
        if (!CURP.matches("^[A-Z]{4}\\d{6}[HM][A-Z]{5}[A-Z0-9]{2}$")) {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese una CURP válida.", "CURP inválida", JOptionPane.ERROR_MESSAGE);
        return;
        }

        try {

            int Edad = Integer.parseInt(edadStr);
            int SalarioE = Integer.parseInt(Salario);

            if (CURP.length() >= 4) {
                String correo_empleado = A_Materno + CURP.substring(CURP.length() - 4) + "@gmail.com";

                String contra_admin = Metodos.generarContraseñaAleatoria(10);
                Clases.Metodos objetoRegistro = new Clases.Metodos();

                objetoRegistro.GuardarDatosPersona(Nombre, A_Paterno, A_Materno, CURP, Direccion, Telefono, Edad);

                int id_empleado = objetoRegistro.obtenerUltimoIdPersona();
                int id_asalariado = objetoRegistro.obtenerUltimoIdPersona();

                if (id_empleado != -1) {
                    objetoRegistro.GuardarDatosEmpleado(id_empleado, correo_empleado, SalarioE, Horario, new java.sql.Date(fechaContratacion.getTime()));

                } else {
                    JOptionPane.showMessageDialog(this, "Error al obtener el ID de la persona.", "Error", JOptionPane.ERROR_MESSAGE);
                }
                if (id_asalariado != -1) {
                    
                    objetoRegistro.GuardarRolEmpleado(id_asalariado, contra_admin, Rol);
                    JOptionPane.showMessageDialog(this, "Empleado registrado correctamente.");
                    objetoRegistro.setGimnasioEmpleado(Sucursal, id_asalariado, new java.sql.Date(fechaContratacion.getTime()));
                    objetoRegistro.crearPDFEmpleado(id_empleado);
                    limpiarEmpleado();
                    
                    
                } else {
                    JOptionPane.showMessageDialog(this, "Error al obtener el ID de la persona.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } 

            
            else {
                JOptionPane.showMessageDialog(this, "Por favor, ingrese un CURP valida", "Error en el CURP", JOptionPane.ERROR_MESSAGE);
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese digitos validos en los campos de edad y/o salario.", "Error en el formato de registro de Edad y/o Salario", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) { // General catch for unexpected exceptions
            JOptionPane.showMessageDialog(this, "Error al guardar los datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
        
        mostrarDatosEmpleados();
        mostrarTodasSucursales();
    }//GEN-LAST:event_btnRegistroEMouseClicked

    private void btnEditarEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarEMouseClicked
        String Nombre = txtNombreE.getText().trim();
        String A_Paterno = txtAPE.getText().trim();
        String A_Materno = txtAME.getText().trim();
        String CURP = txtCURPE.getText().trim();
        String Direccion = txtDireccionE.getText().trim();
        String Telefono = txtTelefonoE.getText().trim();
        String edadStr = txtEdadE.getText().trim();
        String Salario = txtSalarioE.getText().trim();

        String Horario = (String) cboTurnoE.getSelectedItem();
        String Sucursal = (String) cboSucursalesE.getSelectedItem();
        String Rol = (String) cboRolE.getSelectedItem();

        String contra = txtContraA.getText();

        if (Nombre.isEmpty() || A_Paterno.isEmpty() || A_Materno.isEmpty() || CURP.isEmpty() || Direccion.isEmpty() || Telefono.isEmpty() || edadStr.isEmpty() || Salario.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, llene todos los campos.", "Campos vacíos", JOptionPane.ERROR_MESSAGE);
            return;
        }
        // Validar la CURP
        if (!CURP.matches("^[A-Z]{4}\\d{6}[HM][A-Z]{5}[A-Z0-9]{2}$")) {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese una CURP válida.", "CURP inválida", JOptionPane.ERROR_MESSAGE);
        return;
        }
        // Validar que el teléfono contenga solo números y tenga entre 7 y 10 caracteres
        if (!Telefono.matches("\\d{7,10}")) {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese un número de teléfono válido (7-10 dígitos).", "Teléfono inválido", JOptionPane.ERROR_MESSAGE);
        return;
        }

        filaA = TablaEmpleados.getSelectedRow();

        try {
            String idStr = (String) TablaEmpleados.getValueAt(filaA, 0);
            int id = Integer.parseInt(idStr); // Asegúrate de que el valor en esta celda es un número

            int Edad = Integer.parseInt(edadStr);
            int SalarioE = Integer.parseInt(Salario);

            Clases.Metodos objetoRegistro = new Clases.Metodos();

            if (id != -1) {
                objetoRegistro.ActualizarEmpleado(id, Nombre, A_Paterno, A_Materno, CURP, Direccion, Telefono, Edad, SalarioE, Horario);
                objetoRegistro.ActualizarSucursal(id, Sucursal);
                objetoRegistro.cambiarContraseniaEmpleado(id, contra, Rol);
                objetoRegistro.crearPDFEmpleado_ED(id);

                JOptionPane.showMessageDialog(this, "Empleado modificado exitosamente.");
                LimpiarCampos();
            } else {
                JOptionPane.showMessageDialog(this, "Error al obtener el ID de la persona.", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error: El ID, la edad o el salario contienen valores no numéricos.", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        } catch (Exception e) { // General catch for unexpected exceptions
            JOptionPane.showMessageDialog(this, "Error al guardar los datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }

        mostrarDatosEmpleados(); 
        limpiarEmpleado();
        
        
        
    }//GEN-LAST:event_btnEditarEMouseClicked

    private void TablaEmpleadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaEmpleadosMouseClicked
        filaA = TablaEmpleados.getSelectedRow();
        
        int id = Integer.parseInt((String) TablaEmpleados.getValueAt(filaA, 0)); ///////////////////---------------------------------IDPERsona
        
        PreparedStatement ps = null;
        ResultSet rs = null;
        
        String consulta = "select edad,telefono,curp,direccion from persona where id_persona = ?";
        
        try {
        
            cn = con.conectar();
            ps = cn.prepareStatement(consulta);
            ps.setInt(1, id);
            rs = ps.executeQuery();
            if (rs.next()) {
                String Edad = rs.getString(1);
                String Telefono = rs.getString(2);
                String Curp = rs.getString(3);
                String direccion = rs.getString(4);
                txtEdadE.setText(Edad);
                txtEdadE.setForeground(Morado_Fuerte);
                
                txtTelefonoE.setText(Telefono);
                txtTelefonoE.setForeground(Morado_Fuerte);
                
                txtCURPE.setText(Curp);
                txtCURPE.setForeground(Morado_Fuerte);
                
                txtDireccionE.setText(direccion);
                txtDireccionE.setForeground(Morado_Fuerte);
            }
            
        } 
        catch (Exception e) {
        }
        
        //System.out.println(id);
        
        txtNombreE.setText(TablaEmpleados.getValueAt(filaA, 1).toString());
        txtNombreE.setForeground(new Color(54,33,89));
        
        txtAPE.setText(TablaEmpleados.getValueAt(filaA, 2).toString());
        txtAPE.setForeground(Morado_Fuerte);
        
        txtAME.setText(TablaEmpleados.getValueAt(filaA, 3).toString());
        txtAME.setForeground(Morado_Fuerte);
        
        cboSucursalesE.setSelectedItem(TablaEmpleados.getValueAt(filaA, 8).toString());
        cboTurnoE.setSelectedItem(TablaEmpleados.getValueAt(filaA, 9).toString());
        
        cboRolE.setSelectedItem(TablaEmpleados.getValueAt(filaA, 10));
        
        txtSalarioE.setText(TablaEmpleados.getValueAt(filaA, 11).toString() );
        txtSalarioE.setForeground(Morado_Fuerte);
        
        txtContraA.setText(TablaEmpleados.getValueAt(filaA, 5).toString());
        txtContraA.setForeground(Morado_Fuerte);
    }//GEN-LAST:event_TablaEmpleadosMouseClicked

    private void txtBuscarEKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarEKeyReleased
        // TODO add your handling code here:
        mostrarDatosEmpleados();
    }//GEN-LAST:event_txtBuscarEKeyReleased

    private void btnEditarAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarAMouseClicked
        String Nombre = txtNombreA.getText().trim();
        String A_Paterno = txtAPA.getText().trim();
        String A_Materno = txtAMA.getText().trim();
        String CURP = txtCURPA.getText().trim();
        String Direccion = txtDireccionA.getText().trim();
        String Telefono = txtTelefonoA.getText().trim();
        String edadStr = txtEdadA.getText().trim();
        String Salario = txtSalarioA.getText().trim();
        String Horario = (String) cboHora.getSelectedItem();
        String Sucursal = (String) cboSucursales1.getSelectedItem();
        
        String contra = txtContraA.getText().trim();

        if (Nombre.isEmpty() || A_Paterno.isEmpty() || A_Materno.isEmpty() || CURP.isEmpty() || Direccion.isEmpty() || Telefono.isEmpty() || edadStr.isEmpty() || Salario.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, llene todos los campos.", "Campos vacíos", JOptionPane.ERROR_MESSAGE);
            return;
        }
        // Validar que el teléfono contenga solo números y tenga entre 7 y 10 caracteres
        if (!Telefono.matches("\\d{7,10}")) {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese un número de teléfono válido (7-10 dígitos).", "Teléfono inválido", JOptionPane.ERROR_MESSAGE);
        return;
        }
        
        // Validar la CURP
        if (!CURP.matches("^[A-Z]{4}\\d{6}[HM][A-Z]{5}[A-Z0-9]{2}$")) {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese una CURP válida.", "CURP inválida", JOptionPane.ERROR_MESSAGE);
        return;
        }
        
        filaA = TablaAdministradores.getSelectedRow();
        int id = Integer.parseInt((String) TablaAdministradores.getValueAt(filaA, 0)); ///////////////////---------------------------------ID_Empleado
        
        try {
            int Edad = Integer.parseInt(edadStr);
            int salario = Integer.parseInt(Salario);
            
            Clases.Metodos objetoRegistro = new Clases.Metodos();


            if (id != -1) {
                
		objetoRegistro.ActualizarEmpleado(id, Nombre, A_Paterno, A_Materno, CURP, Direccion, Telefono, Edad, salario, Horario);
                objetoRegistro.ActualizarSucursal(id, Sucursal);
                
                objetoRegistro.cambiarContraseniaAdmin(id, contra);
                
                objetoRegistro.crearPDFAdministrador_ED(id);
                
                JOptionPane.showMessageDialog(this, "Administrador modficado exitosamente.");
          
                LimpiarCampos();
                
            } else {
                JOptionPane.showMessageDialog(this, "Error al obtener el ID de la persona.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        

        } 
        catch (Exception e) { // General catch for unexpected exceptions
            JOptionPane.showMessageDialog(this, "Error al guardar los datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
        
        mostrarDatosAdmin(); 
        limpiarAdmin();
        
    }//GEN-LAST:event_btnEditarAMouseClicked

    private void txtNombreEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreEActionPerformed

    private void AltaAsaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AltaAsaActionPerformed
        filaA = TablaEmpleados.getSelectedRow();
        int id_A = Integer.parseInt((String) TablaEmpleados.getValueAt(filaA, 0)); ///////////////////---------------------------------ID_Empleado

        Clases.Metodos m = new Clases.Metodos();
        m.ActualizarFechaEmpleados(id_A);

        mostrarDatosEmpleados();
    }//GEN-LAST:event_AltaAsaActionPerformed

    private void Empleados_SwitchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Empleados_SwitchMouseClicked
        txtContraA.setText("Contraseña");
        txtContraA.setForeground(new Color (204,204,204));
    }//GEN-LAST:event_Empleados_SwitchMouseClicked

    private void txtNombreMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNombreMMouseClicked
        // TODO add your handling code here:
        String aux = "Nombre";

        if (txtNombreM.getText().isEmpty() || txtNombreM.getText().equals(aux)){
            txtNombreM.setForeground(new Color(54,33,89));
            txtNombreM.setText(""); 
        }
    }//GEN-LAST:event_txtNombreMMouseClicked

    private void txtNombreMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreMActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtNombreMActionPerformed

    private void txtPrecioMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPrecioMMouseClicked
        // TODO add your handling code here:
        String aux = "Precio";

        if (txtPrecioM.getText().isEmpty() || txtPrecioM.getText().equals(aux)){
            txtPrecioM.setForeground(new Color(54,33,89));
            txtPrecioM.setText("");
        }

    }//GEN-LAST:event_txtPrecioMMouseClicked

    private void txtDescripcionMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDescripcionMMouseClicked
        // TODO add your handling code here:
        String aux = "Descripcion";

        if (txtDescripcionM.getText().isEmpty() || txtDescripcionM.getText().equals(aux)){
            txtDescripcionM.setForeground(new Color(54,33,89));
            txtDescripcionM.setText("");
        }

    }//GEN-LAST:event_txtDescripcionMMouseClicked

    private void btnRegistroMMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistroMMouseMoved
        // TODO add your handling code here:
        btnRegistroM.setBackground(Color.white);
    }//GEN-LAST:event_btnRegistroMMouseMoved

    private void btnRegistroMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistroMMouseClicked
        // TODO add your handling code here:
        String nombre = txtNombreM.getText().trim();
        String precio = txtPrecioM.getText().trim();
        String descripcion = txtDescripcionM.getText().trim();

        if (nombre.isEmpty() || precio.isEmpty() || descripcion.isEmpty()){
            JOptionPane.showMessageDialog(this, "Por favor, llene todos los campos.", "Campos vacíos", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {

            Metodos aux = new Metodos();
            aux.guardarMembresia(nombre, precio, descripcion);
            JOptionPane.showMessageDialog(this, "Membresia agregada exitosamente.");
            
        }

        catch (HeadlessException e) {
            JOptionPane.showMessageDialog(this, "Error al guardar los datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        
        mostrarTodasM();
        cboMembresias.removeAllItems();
        seleccionarMembresias();
        
    }//GEN-LAST:event_btnRegistroMMouseClicked

    private void btnRegistroMMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistroMMouseExited
        // TODO add your handling code here:
        btnRegistroM.setBackground(Color.WHITE);
    }//GEN-LAST:event_btnRegistroMMouseExited

    private void TablaMembresiasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaMembresiasMouseClicked
        
        fila = TablaMembresias.getSelectedRow();
  
        txtNombreM.setText(TablaMembresias.getValueAt(fila, 1).toString());
        txtNombreM.setForeground(Morado_Fuerte);

        txtDescripcionM.setText(TablaMembresias.getValueAt(fila, 3).toString());
        txtDescripcionM.setForeground(Morado_Fuerte);

        txtPrecioM.setText(TablaMembresias.getValueAt(fila, 2).toString());
        txtPrecioM.setForeground(Morado_Fuerte);
  
    }//GEN-LAST:event_TablaMembresiasMouseClicked

    private void txtBuscarMKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarMKeyReleased
        mostrarTodasM();
    }//GEN-LAST:event_txtBuscarMKeyReleased

    private void btnEliminarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEliminarMouseMoved

    private void btnEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseClicked
        String nombre = TablaMembresias.getValueAt(fila, 1).toString();
        
        try {
            
            int confirm = JOptionPane.showConfirmDialog(null, "¿Está seguro de que desea eliminar la membresía?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION);

            
            if (confirm == JOptionPane.YES_OPTION) {
                Metodos aux = new Metodos();

                aux.eliminarMembresias(nombre);
                JOptionPane.showMessageDialog(null, "Membresía borrada correctamente");
            } else {
                
                JOptionPane.showMessageDialog(null, "Eliminación cancelada");
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Error al eliminar la membresía: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
 
        mostrarTodasM();
        mostrarDatos();
        cboMembresias.removeAllItems();
        seleccionarMembresias();
        
        
    }//GEN-LAST:event_btnEliminarMouseClicked

    private void btnEliminarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEliminarMouseExited

    private void btnEditarMMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarMMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditarMMouseMoved

    private void btnEditarMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarMMouseClicked
           
        fila = TablaMembresias.getSelectedRow();
        
        String nombreAntiguo = TablaMembresias.getValueAt(fila, 1).toString();
        String precioAntiguoStr = TablaMembresias.getValueAt(fila, 2).toString();
        
        String descripcionAntigua = TablaMembresias.getValueAt(fila, 3).toString(); 
        int precioAntiguo =  Integer.parseInt(precioAntiguoStr);
        

        String nombre_Nuevo = txtNombreM.getText();
        String descripcion = txtDescripcionM.getText();
        int precio_nuevo = Integer.parseInt(txtPrecioM.getText());
        
        
        if (nombreAntiguo.equals(nombre_Nuevo) && precioAntiguo == precio_nuevo && descripcionAntigua.equals(descripcion)) {
            JOptionPane.showMessageDialog(this, "Por favor cambie algún campo de texto");
            LimpiarCamposMEM();
        }

        try {
            Metodos aux = new Metodos();
            
            aux.Editar_MembresiasBD(nombreAntiguo, descripcionAntigua, precioAntiguo, nombre_Nuevo, precio_nuevo, descripcion);
            JOptionPane.showMessageDialog(this, "Membresía modificada/migrada exitosamente.");
        } 
        
        catch (HeadlessException e) {
            JOptionPane.showMessageDialog(this, "Error al guardar los datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
 
        mostrarTodasM();
        mostrarDatos();
        cboMembresias.removeAllItems();
        seleccionarMembresias();

    }//GEN-LAST:event_btnEditarMMouseClicked

    private void btnEditarMMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarMMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditarMMouseExited

    private void txtNombreGMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNombreGMouseClicked
        // TODO add your handling code here:
        String aux = "Nombre";

        if (txtNombreG.getText().isEmpty() || txtNombreG.getText().equals(aux)){
            txtNombreG.setForeground(new Color(54,33,89));
            txtNombreG.setText("");
        }

    }//GEN-LAST:event_txtNombreGMouseClicked

    private void txtNombreGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreGActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtNombreGActionPerformed

    private void txtDireccionGMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDireccionGMouseClicked
        // TODO add your handling code here:
        String aux = "Direccion";

        if (txtDireccionG.getText().isEmpty() || txtDireccionG.getText().equals(aux)){
            txtDireccionG.setForeground(new Color(54,33,89));
            txtDireccionG.setText("");
        }
    }//GEN-LAST:event_txtDireccionGMouseClicked

    private void txtBuscarGKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarGKeyReleased
        mostrarTodasSucursales();
    }//GEN-LAST:event_txtBuscarGKeyReleased

    private void TablaSucursalesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaSucursalesMouseClicked
        
        fila = TablaSucursales.getSelectedRow();
  
        txtNombreG.setText(TablaSucursales.getValueAt(fila, 1).toString());
        txtNombreG.setForeground(Morado_Fuerte);

        txtDireccionG.setText(TablaSucursales.getValueAt(fila, 2).toString());
        txtDireccionG.setForeground(Morado_Fuerte);
        
    }//GEN-LAST:event_TablaSucursalesMouseClicked

    private void btnRegistroGMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistroGMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegistroGMouseMoved

    private void btnRegistroGMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistroGMouseClicked
        String nombre = txtNombreG.getText().trim();
        String direccion = txtDireccionG.getText().trim();

        Date fecha = new Date();

        if (nombre.isEmpty() || direccion.isEmpty()){
            JOptionPane.showMessageDialog(this, "Por favor, llene todos los campos.", "Campos vacíos", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            Metodos aux = new Metodos();
            aux.guardarSucursal(nombre, direccion,fecha);
            JOptionPane.showMessageDialog(this, "Sucursal agregada exitosamente.");
            limpiarS();
            
        }
        catch (HeadlessException e) {
            JOptionPane.showMessageDialog(this, "Error al guardar los datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        cboSucursales.removeAllItems();
        cboSucursales1.removeAllItems();
        cboSucursalesE.removeAllItems();
        seleccionarSucursales();
        
        mostrarTodasSucursales();
        mostrarDatos();
        mostrarDatosAdmin();
        mostrarDatosEmpleados();
    }//GEN-LAST:event_btnRegistroGMouseClicked

    private void btnRegistroGMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistroGMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegistroGMouseExited

    private void btnEditarGMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarGMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditarGMouseMoved

    private void btnEditarGMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarGMouseClicked
     
        fila = TablaSucursales.getSelectedRow();

        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Seleccione una fila primero");
            return;
        }

        String nombreAntiguo = TablaSucursales.getValueAt(fila, 1).toString();
        String direccion_A = TablaSucursales.getValueAt(fila, 2).toString();
        String fecha_apertura_A = TablaSucursales.getValueAt(fila, 3).toString();

        String nombre_Nuevo = txtNombreG.getText();
        String direccion_N = txtDireccionG.getText();

        if (nombreAntiguo.equals(nombre_Nuevo) && direccion_A.equals(direccion_N)) {
            JOptionPane.showMessageDialog(this, "Por favor cambie algún campo de texto");
            return;
        }

        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        try {
            Date fechaAntigua = formato.parse(fecha_apertura_A);
            java.sql.Date fechaAntiguaSql = new java.sql.Date(fechaAntigua.getTime());

            String consulta = "SELECT DISTINCT fecha_apertura FROM gimnasio WHERE nombre = ?";

            try (PreparedStatement ps = cn.prepareStatement(consulta)) {

                ps.setString(1, nombre_Nuevo);
                try (ResultSet rs = ps.executeQuery()) {
                    if (rs.next()) {
                        java.sql.Date fecha_N = rs.getDate(1);

                        Metodos aux = new Metodos();
                        aux.Editar_SucursalesBD(nombreAntiguo, direccion_A, fechaAntiguaSql, nombre_Nuevo, direccion_N, fecha_N);

                        JOptionPane.showMessageDialog(this, "Membresía modificada/migrada exitosamente.");
                    } else {
                        JOptionPane.showMessageDialog(this, "No se encontró la fecha de apertura para el nuevo nombre.");
                    }
                }
            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error al obtener la fecha: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (ParseException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error al parsear la fecha de apertura: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        cboSucursales.removeAllItems();
        cboSucursales1.removeAllItems();
        cboSucursalesE.removeAllItems();
        seleccionarSucursales();
        
        mostrarTodasSucursales();
        mostrarDatos();
        mostrarDatosAdmin();
        mostrarDatosEmpleados();
    }//GEN-LAST:event_btnEditarGMouseClicked

    private void btnEditarGMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarGMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditarGMouseExited

    private void btnEliminarG1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarG1MouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEliminarG1MouseMoved

    private void btnEliminarG1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarG1MouseClicked
         String nombre = TablaSucursales.getValueAt(fila, 1).toString();
        
        try {
            
            int confirm = JOptionPane.showConfirmDialog(null, "¿Está seguro de que desea eliminar la sucursal?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION);

            
            if (confirm == JOptionPane.YES_OPTION) {
                Metodos aux = new Metodos();

                aux.eliminarSucursales(nombre);
                JOptionPane.showMessageDialog(null, "Sucursal borrada correctamente");
            } else {
                
                JOptionPane.showMessageDialog(null, "Eliminación cancelada");
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Error al eliminar la sucursal: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        cboSucursales.removeAllItems();
        cboSucursales1.removeAllItems();
        cboSucursalesE.removeAllItems();
        seleccionarSucursales();
        
        mostrarTodasSucursales();
        mostrarDatos();
        mostrarDatosAdmin();
        mostrarDatosEmpleados();
        
    }//GEN-LAST:event_btnEliminarG1MouseClicked

    private void btnEliminarG1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarG1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEliminarG1MouseExited

    private void AltaSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AltaSActionPerformed

        filaA = TablaSucursales.getSelectedRow();
        String nombreAntiguo = TablaSucursales.getValueAt(filaA, 1).toString();

        Clases.Metodos m = new Clases.Metodos();
        m.ActualizarFechaSucursal(nombreAntiguo);

        cboSucursales.removeAllItems();
        cboSucursales1.removeAllItems();
        cboSucursalesE.removeAllItems();
        seleccionarSucursales();

        mostrarTodasSucursales();
        mostrarDatos();
        mostrarDatosAdmin();
        mostrarDatosEmpleados();

    }//GEN-LAST:event_AltaSActionPerformed

    private void btnEnviar_EMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEnviar_EMMouseClicked
        // TODO add your handling code here:
        Clases.Metodos objetoRegistro = new Clases.Metodos();
        
        fila = TablaEmpleados.getSelectedRow();
        int id_e = Integer.parseInt((String) TablaEmpleados.getValueAt(fila, 0)); ///////////////////---------------------------------IDPERsona
        if (id_e != -1) {
        } else {
            JOptionPane.showMessageDialog(this, "Error al obtener el ID de la persona.", "Error", JOptionPane.ERROR_MESSAGE);

        }

        try {
            objetoRegistro.crearPDFEmpleado(id_e);
        } catch (MalformedURLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }//GEN-LAST:event_btnEnviar_EMMouseClicked

    private void btnEditar1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditar1MouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditar1MouseMoved

    private void btnEditar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditar1MouseClicked
        Clases.Metodos objetoRegistro = new Clases.Metodos();

        fila = TablaClientes.getSelectedRow();
        int id = Integer.parseInt((String) TablaClientes.getValueAt(fila, 0)); ///////////////////---------------------------------IDPERsona
        if (id != -1) {
        } else {
            JOptionPane.showMessageDialog(this, "Error al obtener el ID de la persona.", "Error", JOptionPane.ERROR_MESSAGE);

        }

        try {
            objetoRegistro.crearPDF(id);
        } catch (MalformedURLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEditar1MouseClicked

    private void btnEditar1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditar1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditar1MouseExited

    private void btnEditarA1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarA1MouseClicked
       Clases.Metodos objetoRegistro = new Clases.Metodos();
        
        filaA = TablaAdministradores.getSelectedRow();
        int id_A = Integer.parseInt((String) TablaAdministradores.getValueAt(filaA, 0)); ///////////////////---------------------------------IDPERsona
        if (id_A != -1) {
        } else {
            JOptionPane.showMessageDialog(this, "Error al obtener el ID de la persona.", "Error", JOptionPane.ERROR_MESSAGE);

        }

        try {
            objetoRegistro.crearPDFAdministrador(id_A);
        } catch (MalformedURLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEditarA1MouseClicked

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AAdministradores;
    private javax.swing.JPanel Administradores;
    private javax.swing.JPanel Administradores1;
    private javax.swing.JMenuItem Alta;
    private javax.swing.JMenuItem AltaAsa;
    private javax.swing.JMenuItem AltaE;
    private javax.swing.JMenuItem AltaS;
    private javax.swing.JPanel Asalariados;
    private javax.swing.JPanel Clientes;
    private javax.swing.JPanel Empleados;
    private javax.swing.JTabbedPane Empleados_Switch;
    private javax.swing.JPanel Graficas;
    private javax.swing.JPanel Inicio;
    private javax.swing.JPanel Membresias;
    private javax.swing.JPanel PLSucursales;
    private javax.swing.JPanel PLclientes;
    private javax.swing.JPanel PLempleados;
    private javax.swing.JPanel PLinicio;
    private javax.swing.JPanel PLmembresias;
    private javax.swing.JPanel PLsalir;
    private javax.swing.JPanel PLusuario;
    private javax.swing.JPanel PanelGeneral;
    private javax.swing.JPopupMenu PopUpAsalariados;
    private javax.swing.JPopupMenu PopUpClientes;
    private javax.swing.JPopupMenu PopUpEmpleados;
    private javax.swing.JPopupMenu PopUpSucursales;
    private javax.swing.JPanel Sucursales;
    public javax.swing.JTable TablaAdministradores;
    public javax.swing.JTable TablaClientes;
    public javax.swing.JTable TablaEmpleados;
    public javax.swing.JTable TablaMembresias;
    public javax.swing.JTable TablaSucursales;
    public javax.swing.JLabel btnEditar;
    public javax.swing.JLabel btnEditar1;
    private javax.swing.JLabel btnEditarA;
    private javax.swing.JLabel btnEditarA1;
    private javax.swing.JLabel btnEditarE;
    private javax.swing.JLabel btnEditarG;
    private javax.swing.JLabel btnEditarM;
    private javax.swing.JLabel btnEliminar;
    private javax.swing.JLabel btnEliminarG1;
    private javax.swing.JLabel btnEnviar_EM;
    public javax.swing.JLabel btnRegistro;
    private javax.swing.JLabel btnRegistro1;
    private javax.swing.JLabel btnRegistroE;
    private javax.swing.JLabel btnRegistroG;
    private javax.swing.JLabel btnRegistroM;
    private javax.swing.JComboBox<String> cboHora;
    public javax.swing.JComboBox<String> cboMembresias;
    private javax.swing.JComboBox<String> cboRolE;
    public javax.swing.JComboBox<String> cboSucursales;
    public javax.swing.JComboBox<String> cboSucursales1;
    public javax.swing.JComboBox<String> cboSucursalesE;
    private javax.swing.JComboBox<String> cboTurnoE;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblAdSucursal;
    private javax.swing.JLabel lblCLN;
    private javax.swing.JLabel lblIngresos;
    private javax.swing.JLabel lblNombreA;
    private javax.swing.JLabel lblNombreA1;
    private javax.swing.JLabel lblNombreA2;
    private javax.swing.JLabel lblNombreA3;
    private javax.swing.JLabel lblNombreA4;
    private javax.swing.JLabel lblNombreA5;
    private javax.swing.JLabel lblNombreA6;
    private javax.swing.JLabel lblNombreA7;
    private javax.swing.JLabel lblPromedio;
    private javax.swing.JLabel lblTextoMorado;
    private javax.swing.JTabbedPane pnVentanas;
    private javax.swing.JPanel sidePanel;
    private javax.swing.JTextField txtAM;
    private javax.swing.JTextField txtAMA;
    private javax.swing.JTextField txtAME;
    private javax.swing.JTextField txtAP;
    private javax.swing.JTextField txtAPA;
    private javax.swing.JTextField txtAPE;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtBuscarA;
    private javax.swing.JTextField txtBuscarE;
    private javax.swing.JTextField txtBuscarG;
    private javax.swing.JTextField txtBuscarM;
    private javax.swing.JTextField txtCURPA;
    private javax.swing.JTextField txtCURPE;
    private javax.swing.JTextField txtContraA;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtCurp;
    private javax.swing.JTextField txtDescripcionM;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtDireccionA;
    private javax.swing.JTextField txtDireccionE;
    private javax.swing.JTextField txtDireccionG;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtEdadA;
    private javax.swing.JTextField txtEdadE;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNombreA;
    private javax.swing.JTextField txtNombreE;
    private javax.swing.JTextField txtNombreG;
    private javax.swing.JTextField txtNombreM;
    private javax.swing.JTextField txtPrecioM;
    private javax.swing.JTextField txtSalarioA;
    private javax.swing.JTextField txtSalarioE;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtTelefonoA;
    private javax.swing.JTextField txtTelefonoE;
    // End of variables declaration//GEN-END:variables

    private void mostrarDatos() {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("Nombre(s)");
        modelo.addColumn("Apellido Paterno");
        modelo.addColumn("Apellido Materno");
        modelo.addColumn("Direccion");
        modelo.addColumn("Correo Electronico");
        modelo.addColumn("Fecha Inscripcion");
        modelo.addColumn("Fecha Baja");
        modelo.addColumn("Membresia");
        modelo.addColumn("Sucursal");

        TablaClientes.setModel(modelo);
        
        TableColumnModel columnModel = TablaClientes.getColumnModel();
        TableColumn idColumn = columnModel.getColumn(0);
        idColumn.setPreferredWidth(10);

        String consulta = "SELECT p.id_persona, p.Nombre, p.A_Paterno, p.A_Materno, p.Direccion, c.correo_cliente, "
                + "c.fecha_inscripcion, c.fecha_baja, m.nombre AS nombre_membresia, g.nombre AS nombre_gimnasio "
                + "FROM persona p JOIN cliente c ON p.id_persona = c.id_cliente "
                + "JOIN membresia m ON c.id_cliente = m.cliente_m "
                + "JOIN gimnasio g ON m.id_membresia = g.membresia_g";

        String aux_final = consulta + " WHERE p.Nombre LIKE ? OR p.A_Paterno LIKE ? OR p.A_Materno LIKE ?";

        try {
            ResultSet rs;
            if (txtBuscar.getText().isEmpty()) {
                Statement st = cn.createStatement();
                rs = st.executeQuery(consulta);
            } else {
                PreparedStatement pst = cn.prepareStatement(aux_final);
                String searchText = "%" + txtBuscar.getText() + "%";
                pst.setString(1, searchText);
                pst.setString(2, searchText);
                pst.setString(3, searchText);
                rs = pst.executeQuery();
            }

            while (rs.next()) {
                String[] data = new String[10];
                data[0] = rs.getString("id_persona");
                data[1] = rs.getString("Nombre");
                data[2] = rs.getString("A_Paterno");
                data[3] = rs.getString("A_Materno");
                data[4] = rs.getString("Direccion");
                data[5] = rs.getString("correo_cliente");
                data[6] = rs.getString("fecha_inscripcion");
                data[7] = rs.getString("fecha_baja");
                data[8] = rs.getString("nombre_membresia");
                data[9] = rs.getString("nombre_gimnasio");

                modelo.addRow(data);
            }

            rs.close();
        } catch (SQLException e) {
            System.out.println("Error al mostrar los datos de la BD: " + e.getMessage());
        }

        SeleccionTabla renderer = new SeleccionTabla();
        TablaClientes.getColumnModel().getColumn(7).setCellRenderer(renderer);
        
        
    }
    private void LimpiarCampos() {
        txtNombre.setText("Nombre(s)");
        txtNombre.setForeground(new Color(204,204,204));
        
        txtAP.setText("Apellido Paterno");
        txtAP.setForeground(new Color(204,204,204));
        
        txtAM.setText("Apellido Materno");
        txtAM.setForeground(new Color(204,204,204));
        
        txtCurp.setText("CURP");
        txtCurp.setForeground(new Color(204,204,204));
        
        txtTelefono.setText("Telefono");
        txtTelefono.setForeground(new Color(204,204,204));
        
        txtDireccion.setText("Direccion");
        txtDireccion.setForeground(new Color(204,204,204));
        
        txtCorreo.setText("Correo Electronico");
        txtCorreo.setForeground(new Color(204,204,204));
        
        txtEdad.setText("Edad");
        txtEdad.setForeground(new Color(204,204,204));
        
    }
    private void seleccionarMembresias(){
    
        String consulta = "select distinct nombre from membresia" ;
        Statement st;

        try {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(consulta);
            while (rs.next()) {                
                String a= rs.getString( "nombre" );
                cboMembresias.addItem(a);
            }
        } 
        catch (Exception e) {
        }
         
    } 
    private void seleccionarSucursales() {
        String consulta = "SELECT DISTINCT nombre, fecha_cierre FROM gimnasio";
        
        try (Statement st = cn.createStatement(); 
             ResultSet rs = st.executeQuery(consulta)) {
            
            while (rs.next()) {
                String nombre = rs.getString("nombre");
                Date fechaCierre = rs.getDate("fecha_cierre");

                if (fechaCierre == null) {
                    cboSucursales.addItem(nombre);
                    cboSucursales1.addItem(nombre);
                    cboSucursalesE.addItem(nombre);
                }
            }
        } 
        catch (SQLException e) {
            // Usa un logger para registrar el error
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, e);
            // Muestra un mensaje al usuario
            JOptionPane.showMessageDialog(null, "Error al consultar las sucursales: " + e.getMessage());
        }
    }
    public void setUserDataA(String nombre, String aPaterno, String aMaterno, String direccion, String telefono, int edad, String correoEmpleado) {
        
        lblNombreA7.setText(nombre + " " + aPaterno + " " + aMaterno);

        
        
    }
    public void setSucursal(String nombre){
    
        lblAdSucursal.setText("  "+nombre);
    
    }
    private void mostrarDatosAdmin() {
        
	DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("Nombre(s)");
        modelo.addColumn("Apellido Paterno");
        modelo.addColumn("Apellido Materno");
        modelo.addColumn("Correo Electronico");
        modelo.addColumn("Contraseña");
        modelo.addColumn("Fecha Contratacion");
        modelo.addColumn("Fecha Despido");
        modelo.addColumn("Sucursal");
        modelo.addColumn("Turno");
        modelo.addColumn("Salario");

        TablaAdministradores.setModel(modelo);
        
        TableColumnModel columnModel = TablaAdministradores.getColumnModel();
        TableColumn idColumn = columnModel.getColumn(0);
        idColumn.setPreferredWidth(10);
        
        TableColumnModel columnModel1 = TablaAdministradores.getColumnModel();
        TableColumn idColumn1 = columnModel1.getColumn(4);
        idColumn1.setPreferredWidth(150);
        
        TableColumnModel columnModel2 = TablaAdministradores.getColumnModel();
        TableColumn idSucursal = columnModel2.getColumn(8);
        idSucursal.setPreferredWidth(110);
        

        String consulta = "SELECT p.id_persona, p.Nombre, p.A_Paterno, p.A_Materno, e.correo_empleado, "
                + "ad.contra_admin, e.horario, e.salario, g.nombre AS nombre_gimnasio, e.fechacontratacion, e.fecha_despido "
                + "FROM persona p JOIN empleado e ON p.id_persona = e.id_empleado JOIN admin ad ON e.id_empleado = ad.id_admin "
                + "JOIN gimnasio g ON e.id_empleado = g.empleado_g";
           

        String aux_final = consulta + " WHERE p.Nombre LIKE ? OR p.A_Paterno LIKE ? OR p.A_Materno LIKE ?";

        try {
            ResultSet rs;
            if (txtBuscarA.getText().isEmpty()) {
                Statement st = cn.createStatement();
                rs = st.executeQuery(consulta);
            } else {
                PreparedStatement pst = cn.prepareStatement(aux_final);
                String searchText = "%" + txtBuscarA.getText() + "%";
                pst.setString(1, searchText);
                pst.setString(2, searchText);
                pst.setString(3, searchText);
                rs = pst.executeQuery();
            }

            while (rs.next()) {
                String[] data = new String[11];
                data[0] = rs.getString("id_persona");
                data[1] = rs.getString("Nombre");
                data[2] = rs.getString("A_Paterno");
                data[3] = rs.getString("A_Materno");
                data[4] = rs.getString("correo_empleado");
                data[5] = rs.getString("contra_admin");
                data[6] = rs.getString("fechacontratacion");
                data[7] = rs.getString("fecha_despido");
                data[8] = rs.getString("nombre_gimnasio");
                data[9] = rs.getString("horario");
                data[10] = rs.getString("salario");
                                
                modelo.addRow(data);
            }

            rs.close();
        } catch (SQLException e) {
            System.out.println("Error al mostrar los datos de la BD: " + e.getMessage());
        }

        SeleccionTabla renderer = new SeleccionTabla();
        TablaAdministradores.getColumnModel().getColumn(7).setCellRenderer(renderer);
    }
    private void mostrarDatosEmpleados() {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("Nombre(s)");
        modelo.addColumn("Apellido Paterno");
        modelo.addColumn("Apellido Materno");
        modelo.addColumn("Correo Electronico");
        modelo.addColumn("Contraseña");
        modelo.addColumn("Fecha Inicio");
        modelo.addColumn("Fecha Despido");
        modelo.addColumn("Sucursal");
        modelo.addColumn("Turno");
        modelo.addColumn("Rol");
        modelo.addColumn("Salario");

        TablaEmpleados.setModel(modelo);

        // Ajustar el ancho de las columnas
        TableColumnModel columnModel = TablaEmpleados.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(10); // ID
        columnModel.getColumn(11).setPreferredWidth(30);
        columnModel.getColumn(9).setPreferredWidth(50);
        columnModel.getColumn(6).setPreferredWidth(50);
        columnModel.getColumn(7).setPreferredWidth(65);
        columnModel.getColumn(10).setPreferredWidth(60);
        
        TableColumnModel columnModel1 = TablaEmpleados.getColumnModel();
        TableColumn idColumn1 = columnModel1.getColumn(4);
        idColumn1.setPreferredWidth(130);
        
        TableColumnModel columnModel2 = TablaEmpleados.getColumnModel();
        TableColumn idSucursal = columnModel2.getColumn(8);
        idSucursal.setPreferredWidth(100);
      

        String consulta = "SELECT p.id_persona, p.Nombre, p.A_Paterno, p.A_Materno, e.correo_empleado, "
                + "a.contra_asa, e.horario, e.salario, a.rol, g.nombre AS nombre_gimnasio, e.fechacontratacion, e.fecha_despido "
                + "FROM persona p JOIN empleado e ON p.id_persona = e.id_empleado JOIN asalariado a ON e.id_empleado = a.id_asalariado "
                + "JOIN gimnasio g ON e.id_empleado = g.empleado_g";

        String aux_final = consulta + " WHERE p.Nombre LIKE ? OR p.A_Paterno LIKE ? OR p.A_Materno LIKE ?";

        try (Connection cn = new Conexion().conectar(); Statement st = cn.createStatement(); PreparedStatement pst = cn.prepareStatement(aux_final)) {

            ResultSet rs;
            if (txtBuscarE.getText().isEmpty()) {
                rs = st.executeQuery(consulta);
            } else {
                String searchText = "%" + txtBuscarE.getText() + "%";
                pst.setString(1, searchText);
                pst.setString(2, searchText);
                pst.setString(3, searchText);
                rs = pst.executeQuery();
            }

            while (rs.next()) {
                String[] data = new String[12];
                data[0] = rs.getString("id_persona");
                data[1] = rs.getString("Nombre");
                data[2] = rs.getString("A_Paterno");
                data[3] = rs.getString("A_Materno");
                data[4] = rs.getString("correo_empleado");
                data[5] = rs.getString("contra_asa");
                data[6] = rs.getString("fechacontratacion");
                data[7] = rs.getString("fecha_despido");
                data[8] = rs.getString("nombre_gimnasio");
                data[9] = rs.getString("horario");
                data[11] = rs.getString("salario");
                data[10] = rs.getString("rol");

                modelo.addRow(data);
            }

            rs.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al mostrar los datos de la BD: " + e.getMessage());
        }

        // Asegúrate de que la clase SeleccionTabla exista y esté correctamente implementada
        SeleccionTabla renderer = new SeleccionTabla();
        TablaEmpleados.getColumnModel().getColumn(7).setCellRenderer(renderer);
    }
    private void mostrarTodasM() {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("N°");
        modelo.addColumn("Nombre");
        modelo.addColumn("Precio");
        modelo.addColumn("Descripción");
        modelo.addColumn("Clientes asociados a la membresía");

        TablaMembresias.setModel(modelo);

        TableColumnModel columnModel = TablaMembresias.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(5);

        String consultaBase = "SELECT m.nombre, m.precio, m.descripcion, "
                + "COUNT(c.id_cliente) AS cantidad "
                + "FROM Membresia m "
                + "LEFT JOIN Cliente c ON m.cliente_m = c.id_cliente AND c.fecha_baja IS NULL";
        String consulta = consultaBase;
        boolean tieneFiltro = !txtBuscarM.getText().isEmpty();

        if (tieneFiltro) {
            consulta += " WHERE m.nombre LIKE ? GROUP BY m.nombre, m.precio, m.descripcion";
        } else {
            consulta += " GROUP BY m.nombre, m.precio, m.descripcion";
        }

        try (Connection cn = new Conexion().conectar(); PreparedStatement pst = cn.prepareStatement(consulta)) {

            ResultSet rs;

            if (tieneFiltro) {
                String searchText = "%" + txtBuscarM.getText() + "%";
                pst.setString(1, searchText);
                rs = pst.executeQuery();
            } else {
                rs = pst.executeQuery();
            }

            int c = 1;

            while (rs.next()) {
                String[] data = new String[5];
                data[0] = String.valueOf(c++);
                data[1] = rs.getString("nombre");
                data[2] = rs.getString("precio");
                data[3] = rs.getString("descripcion");
                data[4] = String.valueOf(rs.getInt("cantidad"));
                modelo.addRow(data);
            }

            rs.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al mostrar los datos de la BD: " + e.getMessage());
        }
    }
    private void mostrarTodasSucursales() {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("N°");
        modelo.addColumn("Nombre");
        modelo.addColumn("Direccion");
        modelo.addColumn("Fecha de Apertura");
        modelo.addColumn("Fecha de Cierre");
        modelo.addColumn("Clientes asociados a la sucursal");
        modelo.addColumn("Empleados asociados a la sucursal");

        TablaSucursales.setModel(modelo);

        String consultaBase = "SELECT g.nombre, g.direccion, g.fecha_apertura, g.fecha_cierre, COUNT(DISTINCT e.id_empleado) AS cantidadE, "
                + "COUNT(DISTINCT c.id_cliente) AS cantidadC "
                + "FROM gimnasio g "
                + "LEFT JOIN Empleado e ON g.empleado_g = e.id_empleado AND e.fecha_despido IS NULL "
                + "LEFT JOIN membresia m ON g.membresia_g = m.id_membresia "
                + "LEFT JOIN Cliente c ON m.cliente_m = c.id_cliente AND c.fecha_baja IS NULL ";

        String consulta = consultaBase;
        boolean tieneFiltro = !txtBuscarG.getText().isEmpty();

        if (tieneFiltro) {
            consulta += " WHERE g.nombre LIKE ? GROUP BY g.nombre, g.direccion, g.fecha_apertura, g.fecha_cierre";
        } else {
            consulta += " GROUP BY g.nombre, g.direccion, g.fecha_apertura, g.fecha_cierre";
        }

        try (Connection cn = new Conexion().conectar(); PreparedStatement pst = cn.prepareStatement(consulta)) {

            if (tieneFiltro) {
                String searchText = "%" + txtBuscarG.getText() + "%";
                pst.setString(1, searchText);
            }

            try (ResultSet rs = pst.executeQuery()) {
                int c = 1;
                while (rs.next()) {
                    String[] data = new String[7];
                    data[0] = String.valueOf(c++);
                    data[1] = rs.getString("nombre");
                    data[2] = rs.getString("direccion");
                    data[3] = rs.getString("fecha_apertura");
                    data[4] = rs.getString("fecha_cierre");
                    data[5] = String.valueOf(rs.getInt("cantidadC"));
                    data[6] = String.valueOf(rs.getInt("cantidadE"));
                    modelo.addRow(data);
                }
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al mostrar los datos de la BD: " + e.getMessage());
        }
    }
    private void Graficas(){
    
        Metodos metodos = new Metodos();
        JFreeChart graficoPastel = metodos.generarGraficoPastel();
        ChartPanel chartPanel = new ChartPanel(graficoPastel);
        chartPanel.setPreferredSize(new Dimension(440, 330)); 
        chartPanel.setVisible(true);
        
        
        jPanel3.removeAll(); 
        jPanel3.setLayout(new BorderLayout()); 
        jPanel3.setBorder(BorderFactory.createLineBorder(new Color(0, 0, 0, 0)));
        jPanel3.add(chartPanel, BorderLayout.CENTER);
        jPanel3.revalidate(); 
        jPanel3.repaint(); 
        

        JFreeChart GraficaBarras = metodos.generarGraficoBarras();

        
        ChartPanel chartPanel1 = new ChartPanel(GraficaBarras);

        // Establecer un tamaño adecuado para el panel
        chartPanel1.setPreferredSize(new Dimension(440, 330)); // Por ejemplo, 800x600 píxeles

        // Asegurarse de que el panel sea visible
        chartPanel1.setVisible(true);

        // Suponiendo que "jPanel11" es el nombre de tu panel en la interfaz
        jPanel6.removeAll(); // Limpiar el panel si hay otros gráficos
        jPanel6.setLayout(new BorderLayout()); // Asegúrate de que usa BorderLayout

        jPanel6.add(chartPanel1, BorderLayout.CENTER);
        jPanel6.revalidate(); // Validar el panel para que se muestre el gráfico
        jPanel6.repaint();
    
    }
    private void LimpiarCamposMEM() {
        txtNombreM.setText("Nombre");
        txtNombre.setForeground(new Color(204,204,204));
        
        txtPrecioM.setText("Precio");
        txtPrecioM.setForeground(new Color(204,204,204));
        
        txtDescripcionM.setText("Descripcion");
        txtDescripcionM.setForeground(new Color(204,204,204));
        
    }
    private void limpiarS(){
        txtNombreG.setText("Nombre");
        txtNombreG.setForeground(new Color(204,204,204));
        
        txtDireccionG.setText("Direccion");
        txtDireccionG.setForeground(new Color(204,204,204));
    }
    private void limpiarAdmin(){
    
        txtNombreA.setText("Nombre(s)");
        txtNombreA.setForeground(new Color(204,204,204));
        
        txtAPA.setText("Apellido Paterno");   txtAPA.setForeground(new Color(204,204,204));
        
        txtAMA.setText("Apellido Materno");   txtAMA.setForeground(new Color (204,204,204));
        
        txtCURPA.setText("CURP");             txtCURPA.setForeground(new Color(204,204,204));
        
        txtTelefonoA.setText("Telefono");       txtTelefonoA.setForeground(blanquito);
        
        txtDireccionA.setText("Direccion");     txtDireccionA.setForeground(blanquito);
        
        txtSalarioA.setText("Salario");         txtSalarioA.setForeground(blanquito);
        
        txtEdadA.setText("Edad");               txtEdadA.setForeground(blanquito);
        
        txtContraA.setText("Contraseña");       txtContraA.setForeground(blanquito);
        
    }
    private void limpiarEmpleado(){
    
        txtNombreE.setText("Nombre(s)");
        txtNombreE.setForeground(new Color(204,204,204));
        
        txtAPE.setText("Apellido Paterno");   txtAPE.setForeground(new Color(204,204,204));
        
        txtAME.setText("Apellido Materno");   txtAME.setForeground(new Color (204,204,204));
        
        txtCURPE.setText("CURP");             txtCURPE.setForeground(new Color(204,204,204));
        
        txtTelefonoE.setText("Telefono");       txtTelefonoE.setForeground(blanquito);
        
        txtDireccionE.setText("Direccion");     txtDireccionE.setForeground(blanquito);
        
        txtSalarioE.setText("Salario");         txtSalarioE.setForeground(blanquito);
        
        txtEdadE.setText("Edad");               txtEdadE.setForeground(blanquito);
        
        txtContraA.setText("Contraseña");       txtContraA.setForeground(blanquito);
    
    }
    
    private void clientesNuevosxMes(){
    
        String consulta = "SELECT COUNT(*) AS cantidad_de_clientes FROM cliente WHERE MONTH(fecha_inscripcion) = MONTH(CURDATE()) AND YEAR(fecha_inscripcion) = YEAR(CURDATE()) AND fecha_baja IS NULL";
        Statement st;

        try {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(consulta);
            if (rs.next()) {                
                String a= String.valueOf(rs.getInt("cantidad_de_clientes"));
                lblCLN.setText(a);
            }
        } 
        catch (SQLException e) {
        }
         
    }
    private void IngresosTotales_UltimoMes(){
        
        String consulta = "SELECT SUM(m.precio) AS total_precio_membresias FROM cliente c JOIN membresia m ON c.id_cliente = m.cliente_m WHERE MONTH(c.fecha_inscripcion) = MONTH(CURDATE())" 
                            + "AND YEAR(c.fecha_inscripcion) = YEAR(CURDATE()) AND c.fecha_baja IS NULL" ;
        Statement st;
        try {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(consulta);
            if (rs.next()) {                
                String a= String.valueOf(rs.getInt("total_precio_membresias"));
                lblIngresos.setText("$"+a);
            }
        } 
        catch (SQLException e) {
        }
    }
    private void promedio_edad(){
        
        String consulta = "SELECT AVG(p.Edad) AS promedio_edad FROM Persona p JOIN Cliente c ON p.id_persona = c.id_cliente WHERE c.fecha_baja IS NULL";
                
        Statement st;
        try {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(consulta);
            if (rs.next()) {                
                String a= String.valueOf(rs.getDouble("promedio_edad"));
                lblPromedio.setText(a);
            }
        } 
        catch (SQLException e) {
        }
    
    }
    
    
}
